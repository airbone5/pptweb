
[

{"uri": "/nodejs/tutorial/t1_basic.html","title": "t1 basic",
	"tags": [],
	"description": "tutorial 1",
	"content": " 基礎 🏷應該要連結到classnote\\bcc\\html\\Nodejs \r  參考 利用NPM快速建置Node.js網路應用框架 Using HTML in Express instead of Jade A Jade Tutorial for Beginners asp.net 上對nodejs 的解釋 mongoose document 尋找 mongo todolist heroku tutorial us no sql, mongodb,中文 node middleware1,middleware 2  window console  [Alternative Windows shells, besides CMD.EXE?]](https://stackoverflow.com/questions/17349022/alternative-windows-shells-besides-cmd-exe) 4 Better Windows Console Tools Alternative to Windows Built-In Command Prompt  demo 1 直接在目錄下敲入 (🏷註解參看註解 \r)\napp.js\nconsole.log(\u0026quot;hello\u0026quot;)  執行\nnode app.js  demo 2 在tutorial1目錄中\n 快速產生骨架\nnpm install -g express-generator express myExpressApp --view pug  \r出現的訊息\rcreate : myExpressApp\\\rcreate : myExpressApp\\public\\\rcreate : myExpressApp\\public\\javascripts\\\rcreate : myExpressApp\\public\\images\\\rcreate : myExpressApp\\public\\stylesheets\\\rcreate : myExpressApp\\public\\stylesheets\\style.css\rcreate : myExpressApp\\routes\\\rcreate : myExpressApp\\routes\\index.js\rcreate : myExpressApp\\routes\\users.js\rcreate : myExpressApp\\views\\\rcreate : myExpressApp\\views\\error.pug\rcreate : myExpressApp\\views\\index.pug\rcreate : myExpressApp\\views\\layout.pug\rcreate : myExpressApp\\app.js\rcreate : myExpressApp\\package.json\rcreate : myExpressApp\\bin\\\rcreate : myExpressApp\\bin\\www\rchange directory:\r\u0026gt; cd myExpressApp\rinstall dependencies:\r\u0026gt; npm install\rrun the app:\r\u0026gt; SET DEBUG=myexpressapp:* \u0026amp; npm start 安裝\ncd myExpressApp npm install  \rnpm install 產生的目錄結構(第一層)\r \rpackage.json\r{ \u0026quot;name\u0026quot;: \u0026quot;myexpressapp\u0026quot;, \u0026quot;version\u0026quot;: \u0026quot;0.0.0\u0026quot;, \u0026quot;private\u0026quot;: true, \u0026quot;scripts\u0026quot;: { \u0026quot;start\u0026quot;: \u0026quot;node ./bin/www\u0026quot; \u0026lt;span class=\u0026quot;tooltip nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; style=\u0026quot;background: rgb(255 255 255 / 37%); margin: 0; padding: 0;border:solid orange;\u0026quot;\u0026gt; 執行npm start時候的啟動 \u0026lt;/span\u0026gt; \u0026lt;/span\u0026gt; }, \u0026quot;dependencies\u0026quot;: { \u0026quot;cookie-parser\u0026quot;: \u0026quot;~1.4.4\u0026quot;, \u0026quot;debug\u0026quot;: \u0026quot;~2.6.9\u0026quot;, \u0026quot;express\u0026quot;: \u0026quot;~4.16.1\u0026quot;, \u0026quot;http-errors\u0026quot;: \u0026quot;~1.6.3\u0026quot;, \u0026quot;morgan\u0026quot;: \u0026quot;~1.9.1\u0026quot;, \u0026quot;pug\u0026quot;: \u0026quot;2.0.0-beta11\u0026quot; } }   在views子目錄中index.pug內容\nhtml head title= title body h1= message  \rapp.js的內容\r var createError = require('http-errors'); var express = require('express'); var path = require('path'); var cookieParser = require('cookie-parser'); var logger = require('morgan'); var indexRouter = require('./routes/index'); var usersRouter = require('./routes/users'); var app = express(); // view engine setup app.set('views', path.join(__dirname, 'views')); app.set('view engine', 'pug'); app.use(logger('dev')); app.use(express.json()); app.use(express.urlencoded({ extended: false })); app.use(cookieParser()); app.use(express.static(path.join(__dirname, 'public'))); app.use('/', indexRouter); // 🏷註解主要的   app.use('/users', usersRouter); // catch 404 and forward to error handler app.use(function(req, res, next) { next(createError(404)); }); // error handler app.use(function(err, req, res, next) { // set locals, only providing error in development res.locals.message = err.message; res.locals.error = req.app.get('env') === 'development' ? err : {}; // render the error page res.status(err.status || 500); res.render('error'); }); module.exports = app;   啟動\nnpm start  注意:不是❌node start。\n 檢視結果\nhttp://localhost:3000     註解\n⛳自己指定render  app.get('/', function (req, res) { res.render('index', { title: 'Hey', message: 'Hello there!'}); });   上面的程式碼用到了res.render()。 這裡沒用到req,比較下面的程式碼,用到了req因為是查詢。  ⛳也可以這樣寫  如果不用express,可以在src/app.js 中加入:\nconst app = express(); const port = 3000; // http://localhost:3000/toASCII?str=你好 app.get('/toASCII', (req, res) =\u0026gt; { //這裡接收上面的HTTP request res.send(function_2(req.query['str'].toString())); }); app.listen(port, () =\u0026gt; { console.log(`server is listening on ${port}`); });   "
},
{"uri": "/nodejs/tutorial/t2_cors.html","title": "t2 cors 的實驗",
	"tags": [],
	"description": "t2_cors",
	"content": " 參考\n 大致 2 什麼是 Cookie First-Party and Third-Party [Day 27] Cross-Origin Resource Sharing (CORS)  \r檔案結構\r\r\r程式碼快速\r\r\r\rT1產生的app.js\rvar createError = require('http-errors'); var express = require('express'); var path = require('path'); var cookieParser = require('cookie-parser'); var logger = require('morgan'); var indexRouter = require('./routes/index');🏷註解  var usersRouter = require('./routes/users'); var app = express(); // view engine setup app.set('views', path.join(__dirname, 'views')); app.set('view engine', 'pug'); app.use(logger('dev')); app.use(express.json()); app.use(express.urlencoded({ extended: false })); app.use(cookieParser()); app.use(express.static(path.join(__dirname, 'public'))); app.use('/', indexRouter); app.use('/users', usersRouter); // catch 404 and forward to error handler app.use(function(req, res, next) { next(createError(404)); }); // error handler app.use(function(err, req, res, next) { // set locals, only providing error in development res.locals.message = err.message; res.locals.error = req.app.get('env') === 'development' ? err : {}; // render the error page res.status(err.status || 500); res.render('error'); }); module.exports = app;   ⛳routes/index.js  \rT1 產生的index.js \rvar express = require('express'); var router = express.Router(); /* GET home page. */ router.get('/', function(req, res, next) { res.render('index', { title: 'Express' }); // \u0026lt;span class=\u0026quot;tooltip nopre\u0026quot;\u0026gt;🏷\u0026lt;span class=\u0026quot;tooltiptext\u0026quot; style=\u0026quot;background: rgb(255 255 255 / 37%); margin: 0; padding: 0;border:solid orange;\u0026quot;\u0026gt;因為使用epress,所以是res.render。 \u0026lt;/span\u0026gt; \u0026lt;/span\u0026gt; }); module.exports = router;   可以參考  \n安裝cors 這裡參考)，利用之前產生的myExpressApp在目錄下,打入\nnpm i --save cors express nodemon   上面看起來好像跟之前的安裝重複,例如express只是我不管。 --save意思是說順便更新packages.json中的設定  更改index.js index.js 改成\nvar express = require('express'); var router = express.Router(); /* GET home page. */ router.get('/', function(req, res, next) { res.render('index', { title: 'Express' }); }); //---------新增加----------- const ingredients = [ { \u0026quot;id\u0026quot;: \u0026quot;1\u0026quot;, \u0026quot;item\u0026quot;: \u0026quot;Bacon\u0026quot; }, { \u0026quot;id\u0026quot;: \u0026quot;2\u0026quot;, \u0026quot;item\u0026quot;: \u0026quot;Eggs\u0026quot; }, { \u0026quot;id\u0026quot;: \u0026quot;3\u0026quot;, \u0026quot;item\u0026quot;: \u0026quot;Milk\u0026quot; }, { \u0026quot;id\u0026quot;: \u0026quot;4\u0026quot;, \u0026quot;item\u0026quot;: \u0026quot;Butter\u0026quot; } ]; router.get('/ingredients', (req, res) =\u0026gt;{ res.send(ingredients); }); //---------新增加----------- module.exports = router;  然後在瀏覽器上的URL敲入\nhttp://localhost:3000/ingredients  這個時後,CORS沒有警告,因為在同一個domain。\nfetch(\u0026quot;http://localhost:3000/ingredients\u0026quot;).then(req =\u0026gt; req.text()).then(console.log)  圖\r\r\r❌但是如果在其他網頁的主控台上執行下面這一段,會有問題。\n修改3000上的伺服器設定.在app.js上加入\nconst cors = require('cors'); app.use(cors({ origin: '*' }));  如果要特定某個網站xx.xx.com才可以:\nconst cors = require('cors'); app.use(cors({ origin: ['xx.xx.com'] }));  "
},
{"uri": "/nodejs/tutorial/t3_cookies.html","title": "t3_cookies",
	"tags": [],
	"description": "t3_cookies",
	"content": " 相關  1  實作  模組\nnpm install --save cookie-parser  app.js中,加入\nvar cookieParser = require('cookie-parser'); //不使用編碼 //app.use(cookieParser(credentials.cookieSecret));   圖\r\r\r但是我執行http://localhost:3000/的時候,是沒有cookies的。\n🏷如果要保持這個cookies需要session\n"
},
{"uri": "/nodejs/tutorial/t4_session.html","title": "t4_session",
	"tags": [],
	"description": "t4_session",
	"content": "因為不想多寫,所以直接拿現成,把pug改成ejs 自行參考 \r下載\r\rmyExpressApp.zip\r\r\n 安裝ejs\nnpm install ejs --save  修改app.js\napp.set('view engine', 'pug') ==\u0026gt; app.set('view engine', 'ejs')   結論 \r圖\r\r\r💣參看圖裡面圈起來的部分,當發送HTTP request 到同一DOMAIN的時候,瀏覽器會自動把之前的cookies上傳。💣\n"
}
,
{"uri": "/hugonote/stata/encodeimg2.html","title": "encodeimg2 in stata",
	"tags": [],
	"description": "test",
	"content": " 主任務  . use ../tmp/targetds,clear file ../tmp/targetds.dta not found r(601); end of do-file r(601);  "
},
{"uri": "/hugonote/stata/mlogit.html","title": "mlogit",
	"tags": [],
	"description": "測試",
	"content": " 參考 次參考  blogdown  主參考  . webuse sysdsn1 (Health insurance data) . list in 1/3 +--------------------------------------------------------------------------------------------------------------------+ | patid noinsur0 noinsur1 noinsur2 age male ppd0 ppd1 ppd2 nonwhite ppd insure site | |--------------------------------------------------------------------------------------------------------------------| 1. | 3292 0 0 0 73.722107 0 0 0 0 0 0 Indemnity 2 | 2. | 3685 . . . 27.89595 0 1 1 1 0 1 Prepaid 2 | 3. | 5097 0 0 0 37.541397 0 0 0 0 0 0 Indemnity 1 | +--------------------------------------------------------------------------------------------------------------------+ . //\r展開\r. mlogit insure age male nonwhite i.site\nIteration 0: log likelihood = -555.85446\nIteration 1: log likelihood = -534.67443\nIteration 2: log likelihood = -534.36284\nIteration 3: log likelihood = -534.36165\nIteration 4: log likelihood = -534.36165\nMultinomial logistic regression Number of obs = 615 LR chi2(10) = 42.99 Prob \u0026gt; chi2 = 0.0000 Log likelihood = -534.36165 Pseudo R2 = 0.0387\n insure | Coef. Std. Err. z P\u0026gt;|z| [95% Conf. Interval]  -------------+---------------------------------------------------------------- Indemnity | (base outcome) -------------+---------------------------------------------------------------- Prepaid | age | -.011745 .0061946 -1.90 0.058 -.0238862 .0003962 male | .5616934 .2027465 2.77 0.006 .1643175 .9590693 nonwhite | .9747768 .2363213 4.12 0.000 .5115955 1.437958 | site | 2 | .1130359 .2101903 0.54 0.591 -.2989296 .5250013 3 | -.5879879 .2279351 -2.58 0.010 -1.034733 -.1412433 | _cons | .2697127 .3284422 0.82 0.412 -.3740222 .9134476 -------------+---------------------------------------------------------------- Uninsure | age | -.0077961 .0114418 -0.68 0.496 -.0302217 .0146294 male | .4518496 .3674867 1.23 0.219 -.268411 1.17211 nonwhite | .2170589 .4256361 0.51 0.610 -.6171725 1.05129 | site | 2 | -1.211563 .4705127 -2.57 0.010 -2.133751 -.2893747 3 | -.2078123 .3662926 -0.57 0.570 -.9257327 .510108 |\n_cons | -1.286943 .5923219 -2.17 0.030 -2.447872 -.1260134 . //\n . // save predictions of each level of outcome . predict p1 if e(sample), outcome(1) (option pr assumed; predicted probability) (29 missing values generated) . predict p2 if e(sample), outcome(2) (option pr assumed; predicted probability) (29 missing values generated) . predict p3 if e(sample), outcome(3) (option pr assumed; predicted probability) (29 missing values generated) . . // generate dummy variables for each level . tab insure, gen(type) insure | Freq. Percent Cum. ------------+----------------------------------- Indemnity | 294 47.73 47.73 Prepaid | 277 44.97 92.69 Uninsure | 45 7.31 100.00 ------------+----------------------------------- Total | 616 100.00 . . // compare ROC curves for each predicted level of outcome to actual level 1 . roccomp type1 p1 p2 p3, graph summary ROC -Asymptotic Normal-- Obs Area Std. Err. [95% Conf. Interval] ------------------------------------------------------------------------- p1 615 0.6182 0.0225 0.57407 0.66242 p2 615 0.3865 0.0226 0.34229 0.43076 p3 615 0.5079 0.0235 0.46186 0.55391 ------------------------------------------------------------------------- Ho: area(p1) = area(p2) = area(p3) chi2(2) = 27.95 Prob\u0026gt;chi2 = 0.0000 . graph export ../../report/p1.png,replace (file ../../report/p1.png written in PNG format) . // .  如果code chunk 在裡面,圖形不出來   比較二元 ,Echo=T,cleanlog=T}\n . foreach x in 1 2 3 { 2. disp \u0026quot;`x'\u0026quot; 3. } 1 2 3  "
},
{"uri": "/hugonote/stata/%E6%BA%96%E5%82%99%E4%BD%9C%E7%82%BA%E5%85%B6%E4%BB%96%E7%94%A8%E9%80%94.html","title": "準備作為其他用途",
	"tags": ["manual.quote"],
	"description": "紀錄",
	"content": ""
}
,
{"uri": "/basic/token/token%E5%AF%A6%E9%A9%97.html","title": "t2 token實驗",
	"tags": [],
	"description": "token3",
	"content": "-curl test\n顯示帳號訊息 顯示登入後使用者的訊息,只有用到clientid。\n官方參考\n檔案名稱:byclientid.html。 \r.hframe  .infobar{\rposition: absolute;\rtop: .3em;\rright: .2em;\rtransition: opacity 0.3s ease-in-out;\ropacity: 0; }\r.hframe  .infobar button,\r.hframe  .infobar a\r{\rcolor: #bbb;\rfont-size: .8em;\rpadding: 0 .5em;\rbackground: rgba(224, 224, 224, 0.2);\rbox-shadow: 0 2px 0 0 rgb(0 0 0 / 20%);\rborder-radius: .5em;\r}\r.hframe{\rpadding-top: 1.5rem;\rposition: relative;\rbox-shadow: 6px 4px 6px #9baccb;\rborder: 2px solid #9baccb; }\r.hframe:hover  .infobar{\ropacity: 1;\r}\r.hframe .frame-code {\rdisplay: none;\rmargin-left: 1rem;\rpadding-left: 1rem;\rborder-left: 4px rgb(74 146 197) dotted;\r} \r\rfunction showhide(aevent){\rlet e= aevent.target;\rlet ele= e.parentElement.parentElement;\rele = ele.querySelector(\"div.frame-code\");\rif (ele.style.display==\"block\"){\rele.style.display = \"none\";\re.innerText=\"看內容\";\r} else{\rele.style.display = \"block\";\re.innerText=\"關閉內容\";\r}\raevent.preventDefault();\r}\r\r外部連結\r看內容\r \r---\rtitle: byclientid\rdescription: toke2\rtags: []\rcategories: []\rseries: []\reditext: html\rhidden: true\r---\r\u0026lt;!--more--\u0026gt;\r\u0026lt;!DOCTYPE html\u0026gt;\r\u0026lt;html\u0026gt;\r\u0026lt;head\u0026gt;\r\u0026lt;meta charset=\u0026#34;utf-8\u0026#34;\u0026gt; \u0026lt;meta name=\u0026#34;google-signin-client_id\u0026#34; content=\u0026#34;481947092768-53dhr9tr3ah7o7devccd6oqpmh5a7goe.apps.googleusercontent.com\u0026#34;\u0026gt;\r\u0026lt;script src=\u0026#34;https://apis.google.com/js/platform.js\u0026#34; async defer\u0026gt;\u0026lt;/script\u0026gt;\r\u0026lt;/head\u0026gt;\r\u0026lt;body\u0026gt;\r\u0026lt;div class=\u0026#34;g-signin2\u0026#34; data-onsuccess=\u0026#34;onSignIn\u0026#34;\u0026gt;\u0026lt;/div\u0026gt;\r\u0026lt;div id=\u0026#34;profileinfo\u0026#34;\u0026gt;\r\u0026lt;/div\u0026gt;\r\u0026lt;button onclick=\u0026#34;signOut()\u0026#34; \u0026gt;登出\u0026lt;/button\u0026gt;\r\u0026lt;script\u0026gt;\rfunction onSignIn(googleUser){\rvar profile = googleUser.getBasicProfile();\rvar name=`\u0026lt;h2\u0026gt; Name - ${profile.getName()} \u0026lt;/h2\u0026gt;`;\r$(\u0026#34;#profileinfo\u0026#34;).append(name);\rvar imageurl=`\u0026lt;img style=width:150px;height:150px\u0026#39; src=\u0026#39;${profile.getImageUrl()}\u0026#39;\u0026gt;\u0026lt;/br\u0026gt;`;\r$(\u0026#34;#profileinfo\u0026#34;).append(imageurl);\rvar emailstr = `\u0026lt;p\u0026gt; email is ${profile.getEmail()} \u0026lt;/p\u0026gt;`;\r$(\u0026#34;#profileinfo\u0026#34;).append(emailstr);\r}\rfunction signOut(){\rvar auth2 = gapi.auth2.getAuthInstance();\rauth2.signOut().then(function(){\r$(\u0026#34;#profileinfo\u0026#34;).empty();\r$(\u0026#34;#profileinfo\u0026#34;).append(\u0026#34;sigined out\u0026#34;);\r})\r}\r\u0026lt;/script\u0026gt;\r\u0026lt;/body\u0026gt;\r\u0026lt;/html\u0026gt;\r \r\r"
},
{"uri": "/basic/token/test.html","title": "test",
	"tags": [],
	"description": "test",
	"content": "\r\rDrive API Quickstart\r\r\rDrive API Quickstart\nAuthorize\rSign Out\r\r// Client ID and API key from the Developer Console\rvar CLIENT_ID = '481947092768-53dhr9tr3ah7o7devccd6oqpmh5a7goe.apps.googleusercontent.com';\rvar API_KEY = 'AIzaSyB7Z-SAVVBHgkb57T1pR9-WW_ui2dIgOhY';\r// Array of API discovery doc URLs for APIs used by the quickstart\rvar DISCOVERY_DOCS = [\"https://www.googleapis.com/discovery/v1/apis/drive/v3/rest\"];\r// Authorization scopes required by the API; multiple scopes can be\r// included, separated by spaces.\rvar SCOPES = 'https://www.googleapis.com/auth/drive.metadata.readonly';\rvar authorizeButton = document.getElementById('authorize_button');\rvar signoutButton = document.getElementById('signout_button');\r/**\r* On load, called to load the auth2 library and API client library.\r*/\rfunction handleClientLoad() {\rgapi.load('client:auth2', initClient);\r}\r/**\r* Initializes the API client library and sets up sign-in state\r* listeners.\r*/\rfunction initClient() {\rgapi.client.init({\rapiKey: API_KEY,\rclientId: CLIENT_ID,\rdiscoveryDocs: DISCOVERY_DOCS,\rscope: SCOPES\r}).then(function () {\r// Listen for sign-in state changes.\rgapi.auth2.getAuthInstance().isSignedIn.listen(updateSigninStatus);\r// Handle the initial sign-in state.\rupdateSigninStatus(gapi.auth2.getAuthInstance().isSignedIn.get());\rauthorizeButton.onclick = handleAuthClick;\rsignoutButton.onclick = handleSignoutClick;\r}, function(error) {\rappendPre(JSON.stringify(error, null, 2));\r});\r}\r/**\r* Called when the signed in status changes, to update the UI\r* appropriately. After a sign-in, the API is called.\r*/\rfunction updateSigninStatus(isSignedIn) {\rif (isSignedIn) {\rauthorizeButton.style.display = 'none';\rsignoutButton.style.display = 'block';\rlistFiles();\r} else {\rauthorizeButton.style.display = 'block';\rsignoutButton.style.display = 'none';\r}\r}\r/**\r* Sign in the user upon button click.\r*/\rfunction handleAuthClick(event) {\rgapi.auth2.getAuthInstance().signIn();\r}\r/**\r* Sign out the user upon button click.\r*/\rfunction handleSignoutClick(event) {\rgapi.auth2.getAuthInstance().signOut();\r}\r/**\r* Append a pre element to the body containing the given message\r* as its text node. Used to display the results of the API call.\r*\r* @param {string} message Text to be placed in pre element.\r*/\rfunction appendPre(message) {\rvar pre = document.getElementById('content');\rvar textContent = document.createTextNode(message + '\\n');\rpre.appendChild(textContent);\r}\r/**\r* Print files.\r*/\rfunction listFiles() {\rgapi.client.drive.files.list({\r'pageSize': 10,\r'fields': \"nextPageToken, files(id, name)\"\r}).then(function(response) {\rappendPre('Files:');\rvar files = response.result.files;\rif (files \u0026\u0026 files.length  0) {\rfor (var i = 0; i \rlist\r\r"
},
{"uri": "/basic/token/%E6%8B%BFtoken.html","title": "拿token",
	"tags": [],
	"description": "拿token",
	"content": " ⛳curf Google Drive\n 1\n 2\n 有些看不到\n 相關  "
},
{"uri": "/basic/token/reuri.html","title": "重導用的URI",
	"tags": [],
	"description": "reuri",
	"content": " "
}
,
{"uri": "/basic/tagtest.html","title": "標籤",
	"tags": ["shortcode"],
	"description": "問題和紀錄",
	"content": " 有關標籤的設定 相關檔案在partial\\tags.html\n在config.toml 中,我設定了uglyURLs=true 然後,要讀取這個值的時候,HUGO說沒有這個(error),所以config.toml 有兩行uglyURLs=true 一個不在params中,一個在params裡面.\n 前面是給HUGO用的, 後面params節中設定是給shortcode用的。  "
},
{"uri": "/basic/short_editurl.html","title": "編輯副檔名",
	"tags": ["code", "shortcode"],
	"description": "測試紀錄",
	"content": "問題描述 按下EDIT,希望可以針對實際上的檔案編輯,而不是預設md檔案,因為有時是在Rmarkdown 中寫的。\n背景 解這個問題的相關測試 下面是用來測試的短碼\n{{ $xx1 := .Page.File.Path }} {{ $xx1 }} \u0026lt;br\u0026gt; {{ $ext := default \u0026quot;md\u0026quot; .Page.Params.EditExt }} {{ $ext }} \u0026lt;br\u0026gt; {{ $filepath := path.Join .Page.File.Dir $ext }} {{ $filepath }} \u0026lt;br\u0026gt;  測試的MD的Front 內容為\n--- title: 編輯副檔名 description: 測試紀錄 weight: 3 tags: [\u0026quot;code\u0026quot;,\u0026quot;shortcode\u0026quot;] Editext: \u0026quot;xfd\u0026quot; ---  MD這個檔案在content+ | +basic+ | +short_editurl.md\n結果顯示\nbasic\\short_editurl.md \u0026lt;==.Page.File.Path xfd \u0026lt;=.Page.Params.Editurl basic/xfd \u0026lt;= .Page.File.Dir + .Page.Params.Editurl "
},
{"uri": "/basic/vscode.html","title": "vscode 的設定",
	"tags": [],
	"description": "快速",
	"content": "  滑鼠捲動控制字型大小  在設定中查找關鍵字 mousewheel  emoji 的色彩設定不對  在設定中查找關鍵字 font ,添加Segoe Emoji或Segoe UI Emoji,前者好像顏色有問題✔。   常用工具  html to md html decode word to html  "
},
{"uri": "/basic/vscode%E5%BF%AB%E9%80%9F.html","title": "vscode快速",
	"tags": [],
	"description": "vscode快速",
	"content": " 自訂snippet "
},
{"uri": "/basic/%E4%BD%BF%E7%94%A8slice.html","title": "使用slice",
	"tags": [],
	"description": "使用slice",
	"content": " 加入兩個座標到陣列\n{{ $pages := slice}} {{ $pages := $pages | append (dict \u0026quot;x\u0026quot; 1 \u0026quot;y\u0026quot; 1) }} {{ $pages := $pages | append (dict \u0026quot;x\u0026quot; 2 \u0026quot;y\u0026quot; 2) }} {{ $pages1 := slice}} {{ $pages1 := $pages1 | append (dict \u0026quot;x\u0026quot; 3 \u0026quot;y\u0026quot; 1) }} {{ $pages := append $pages $pages1 }} {{ range $pages }} {{.x}} \u0026lt;br/\u0026gt; {{end}} 🏷{{ $pages}} \u0026lt;br/\u0026gt; {{/* 只是看一下甚麼是 array of dict */}}  把partial當成一個副程式,傳回一個陣列: 對照上面的寫法,我要測試是否能把partial 當成副程式。\npartial sort1.html\n{{ $pages := slice (dict \u0026quot;x\u0026quot; 1 )}} {{ $pages := $pages | append (dict \u0026quot;x\u0026quot; 2 )}} {{ $pages := $pages | append (dict \u0026quot;x\u0026quot; 3 )}} {{ return $pages }}  調用sort1.html\n{{ $pages1 := partial \u0026quot;sort1.html\u0026quot; .}} {{range $pages1 }} 🏷{{.x }} \u0026lt;br\u0026gt; {{end}}  會傳回3,2,1。\nsort {{ $pages := slice (dict \u0026quot;x\u0026quot; 2 )}} {{ $pages := $pages | append (dict \u0026quot;x\u0026quot; 1 ) }} {{ $pages := $pages | append (dict \u0026quot;x\u0026quot; 3 ) }} {{ $pages := sort $pages \u0026quot;x\u0026quot;}} {{range $pages }} 🏷{{.x }} \u0026lt;br\u0026gt; {{end}}  我要把網站排序 先section然後 page,而且如果文章標題裡面有章節數字,還要照章節數字排序,否則按照標題排序。\n{{ $pages := slice}} {{ range where $.Pages \u0026quot;Kind\u0026quot; \u0026quot;section\u0026quot; }} {{ $weight := index (findRE \u0026quot;[\\\\d]+\u0026quot; .Title) 0 }} {{ $weight := default .Title $weight }} {{ $pages = $pages | append (dict \u0026quot;page\u0026quot; . \u0026quot;weight\u0026quot; $weight) }} {{ end }} {{ $pages := sort $pages \u0026quot;weight\u0026quot; }} {{ $normal :=slice }} {{ range where $.Pages \u0026quot;Kind\u0026quot; \u0026quot;page\u0026quot; }} {{ $weight := index (findRE \u0026quot;[\\\\d]+\u0026quot; .Title) 0 }} {{ $weight := default .Title $weight }} {{ $normal = $normal | append (dict \u0026quot;page\u0026quot; . \u0026quot;weight\u0026quot; $weight) }} {{ end }} {{ $normal := sort $normal \u0026quot;weight\u0026quot; }} {{ $pages := append $pages $normal }} {{/* 會有空元素 */}} {{ return $pages}}  使用範例 範例1\n{{ range .Site.Sections }} \u0026lt;h1\u0026gt;{{ .Name }} \u0026lt;/h1\u0026gt; {{ $pages := partial \u0026quot;sort1.html\u0026quot; . }} {{ range $pages }} 🏷{{ .weight }} \u0026lt;br/\u0026gt; {{end}} {{ end }}  範例2\n{{ with .Site.GetPage \u0026quot;web/javascript\u0026quot; }} \u0026lt;h1\u0026gt;{{ .Name }} \u0026lt;/h1\u0026gt; {{ $pages := partial \u0026quot;sort1.html\u0026quot; . }} {{ range $pages }} 🏷{{ .weight }} \u0026lt;br/\u0026gt; {{end}} {{ end }}  "
},
{"uri": "/basic/%E5%85%A7%E5%BB%BA%E6%8C%87%E4%BB%A4relref%E6%B8%AC%E8%A9%A6.html","title": "內建指令relref測試.md",
	"tags": [],
	"description": "內建指令relref測試.md",
	"content": " 短碼 myref.html 歷史紀錄 短碼 myref.html\n{{- if in (.Get 0) \u0026quot;/_index.md\u0026quot; -}} {{- $paths := (split (.Get 0) \u0026quot;_index.md\u0026quot;) -}} {{- $pagepath := index $paths 0 -}} {{- $anchor := index $paths 1 -}} {{- with .Site.GetPage \u0026quot;section\u0026quot; (trim $pagepath \u0026quot;/\u0026quot;) -}} {{- ( printf \u0026quot;%s%s\u0026quot; $pagepath $anchor ) | relURL -}} {{- end -}} {{- else -}} {{- with .Site.GetPage \u0026quot;section\u0026quot; (.Get 0) }} {{- .RelPermalink -}} {{- else -}} {{- .Get 0 | relref .Page -}} {{- end -}} {{- end -}}   如果傳進的參數有_index.md 那麼就用_index.md分割,成前後兩部分,編號為0,1。 trim這個函數除了切空白,也可以傳參數,例如本例切斜線(/)  目前 {{ relref . (.Get 0) }}  測試 {{\u0026lt; myref \u0026quot;短碼expand\u0026quot; \u0026gt;}} /basic/%E7%9F%AD%E7%A2%BCexpand.html\n"
},
{"uri": "/basic/%E6%89%93%E5%85%89.html","title": "打光議題",
	"tags": [],
	"description": "相關紀錄",
	"content": " 注意事項 HUGO的內建打光，可以這樣操控\npygmentsUseClasses = true 是不是要加類別 pygmentsCodeFences = false 不對```圈起來的程式碼作用  但是這個內建打光好像會自動判斷短碼是否在註解裡面,否則就不會作用,我把它關掉,因為我的程式碼本來就是註解用,不是用來直接複製貼上執行。例如下面的短碼,不作用❌()，除非前面加上註解 //\n```js ❌{{\u0026lt; quote \u0026gt;}} 沒作用,而且消失,應該是被刪掉{{\u0026lt; /quote \u0026gt;}} ✔//{{\u0026lt; quote \u0026gt;}} 這樣可以{{\u0026lt; /quote \u0026gt;}} ```  手動打光 document.addEventListener('DOMContentLoaded', (event) =\u0026gt; { document.querySelectorAll('pre code').forEach((el) =\u0026gt; { hljs.highlightElement(el); }); });  "
},
{"uri": "/basic/%E6%89%93%E5%8C%85%E6%96%87%E4%BB%B6.html","title": "打包文件",
	"tags": [],
	"description": "打包文件",
	"content": "參考  看過的\n 產生和存檔 URL變成datauri\n摘要   \u0026lt;a download=\u0026quot;My-FileName.txt\u0026quot; href=\u0026quot;data:application/octet-stream,HELLO-WORLDDDDDDDD\u0026quot;\u0026gt;Click here\u0026lt;/a\u0026gt;\n上面href產生的方式,利用函數encodeURIComponent()大概如下，其中的資料可以是其他標籤中的innerHTML或是innerText:\nlet a = document.createElement('a'); a.href = \u0026quot;data:application/octet-stream,\u0026quot;+ 🏷主要函數,不編碼base64 \r encodeURIComponent('\u0026quot;資料\u0026quot;'); a.download = 'myFile.json';  如果要指定base64，大概會是這樣:href=\u0026quot;data:application/octet-stream,base64;.....。\na.href = 'data:text/attachment;base64,' + encodeURIComponent(document.getElementById(eid).innerHTML);  符號解釋: key value 之間用冒號(例如:data:text/attachment),如果還有其他選項(例如Base64)就使用不換行符號,分號(例如: data:text/attachment;base64),逗點表示開始另一個欄位資料,也就是編碼資料。\r\r\r比較方便是用套件編碼用js-Base64,要不然就是btoa,atob(但是btoa()是處理1 byte的二進位資料,所以遇到UTF-8會有錯誤訊息),可以參考這裡。\n escape() 幾乎都編碼(各種符號包刮/) encodeURI() ,decodeURI() 我常用來對location上的亂碼用來解碼 encodeURIComponent() :通常是整個標籤內的innerText,innerHTML(因為會把/編碼)\nwindow.btoa(\u0026quot;xxxx\u0026quot;) ✔ window.btoa(\u0026quot;你好\u0026quot;) ❌ decodeURI(encodeURI(\u0026quot;你好\u0026quot;)) ✔正確還原,但是這不是base64   💡所以我可以btoa(escape(某些東西))，也就是先轉ASCII然後編碼,然後再利用btoa。這個方式應該是最強大的,只是會產生很多字串。所以也可以考慮encodeURI,如下:\n比較好用的方式\ns=window.btoa(encodeURI(\u0026quot;你好\u0026quot;)) decodeURI(window.atob(s))  注意不是下面這個順序:\ns=window.btoa(encodeURI(\u0026quot;你好\u0026quot;)) window.atob(decodeURI(s)) 結果是 \u0026quot;%E4%BD%A0%E5%A5%BD\u0026quot;  snippet github singlefile  download code\nasync function downloadPageForeground(pageData) { if (pageData.filename \u0026amp;\u0026amp; pageData.filename.length) { const link = document.createElement(\u0026quot;a\u0026quot;); link.download = pageData.filename; link.href = URL.createObjectURL(new Blob([pageData.content], { type: \u0026quot;text/html\u0026quot; })); link.dispatchEvent(new MouseEvent(\u0026quot;click\u0026quot;)); URL.revokeObjectURL(link.href); } return new Promise(resolve =\u0026gt; setTimeout(resolve, 1)); } function saveToClipboard(page) { const command = \u0026quot;copy\u0026quot;; document.addEventListener(command, listener); document.execCommand(command); document.removeEventListener(command, listener); function listener(event) { event.clipboardData.setData(\u0026quot;text/html\u0026quot;, page.content); event.clipboardData.setData(\u0026quot;text/plain\u0026quot;, page.content); event.preventDefault(); } }   檔案轉base64  ref 簡單的想成簽一個契約,這個契約有兩個部分,一個是resolve,一個是reject  如圖,執行主要工作(這裡是readAsDataURL),如果成功(這裡是ONLOAD事件)就執行resolv,否則執行reject。\nconst toBase64 = file =\u0026gt; new Promise((resolve, reject) =\u0026gt; { const reader = new FileReader(); reader.readAsDataURL(file); reader.onload = () =\u0026gt; resolve(reader.result); reader.onerror = error =\u0026gt; reject(error); }); async function Main() { const file = document.querySelector('#myfile').files[0]; console.log(await toBase64(file)); } Main();    more promise\n  其他  比對字串,如果match 就傳回\nfruit = [\u0026quot;lemon\u0026quot;,\u0026quot;banana\u0026quot;,\u0026quot;apple\u0026quot;]; fruit.filter( e=\u0026gt; e.match(/^(banana|lemon|mango|pineapple)$/))  如果是forEach,不傳回任何東西,結果都是undefined。\r\r\r 紀錄 2021-08-12(12:28) 用到幾個函數 - unescape() - encodeURIComponent()\nfunction utf8_to_b64( str ) { // 🏷這裡有意思,因為encodeURIComponent會把/符號編碼,所以用了unescape \r return window.btoa(unescape(encodeURIComponent( str ))); } function extractElement(eid){ document.location = 'data:text/attachment;base64,' + // Notice the new \u0026quot;base64\u0026quot; bit! utf8_to_b64(document.getElementById(eid).innerHTML); //utf8_to_b64(document.documentElement.innerHTML); //To Download Entire Html Source } function packthis() { extractElement(\u0026quot;content-wrapper\u0026quot;); }  2021-08-12(13:15) 產生下載連結的示範\nfunction packthis() { a = document.createElement('a'); a.href = 'data:text/html;charset=utf-8,\u0026lt;html\u0026gt;' + escape(document.documentElement.innerHTML) + '\u0026lt;/html\u0026gt;'; a.innerHTML = 'click here'; document.body.appendChild(a); a.download =\u0026quot;demo.html\u0026quot;; a.click(); }  但是下載的結果卻是產生一個JS,CSS都沒作用的網頁。❌不要。\n✔打包某個URL中的附件 //這裡產生的是一個File物件。 async function getFileFromUrl(url, name, defaultType = 'image/jpeg'){ const response = await fetch(url); const data = await response.blob(); return new File([data], name, { type: response.headers.get('content-type') || defaultType, }); } async function packthis() { // `await` can only be used in an async body, but showing it here for simplicity. const file = await getFileFromUrl('/~linchao/test/hugonote/pic2.jpg', 'example.jpg'); let url = URL.createObjectURL(file); //🏷註解上面,不要用createObjectURL() ,而是改成file.readAsDataURL(myBlob) 就是我要的 \r let link = document.createElement('a'); link.href = url; link.download = file.name; link.click(); link = null; URL.revokeObjectURL(url); }  但是這也不是我要的,我要直接內嵌在文件裡面。\n ⛳註解  作為示範,下面傳到console.log的字串,就是base64URI編碼,也就是href= console.log中的字串。\nconst file = await getFileFromUrl('/~linchao/test/hugonote/pic2.jpg', 'example.jpg'); reader = new FileReader() reader.onload = e=\u0026gt; console.log(reader.result); reader.readAsDataURL(file)   基本上這是我要的 const getBlobFromUrl = (myImageUrl) =\u0026gt; { return new Promise((resolve, reject) =\u0026gt; { let request = new XMLHttpRequest(); request.open('GET', myImageUrl, true); request.responseType = 'blob'; request.onload = () =\u0026gt; { resolve(request.response); }; request.onerror = reject; request.send(); }) } const getDataFromBlob = (myBlob) =\u0026gt; { return new Promise((resolve, reject) =\u0026gt; { let reader = new FileReader(); reader.onload = () =\u0026gt; { resolve(reader.result);//🏷直接傳回base64字串 \r }; reader.onerror = reject; reader.readAsDataURL(myBlob); //🏷readAsDataURL 產生base64 編碼字串 \r }) } const convertUrlToImageData = async (myImageUrl) =\u0026gt; { try { let myBlob = await getBlobFromUrl(myImageUrl); let myImageData = await getDataFromBlob(myBlob); return myImageData; } catch (err) { console.log(err); return null; } } async function packthis() { let link = document.createElement('a'); document.body.appendChild(link); //link.innerText=\u0026quot;xxxxxxxxxxxxxxxxx\u0026quot;; url= await convertUrlToImageData('/~linchao/test/xxx.xlsx'); link.href = url; link.download = \u0026quot;xx.xlsx\u0026quot;; link.click(); }  測試 點擊那個包裹按鈕 \r下載\r\rxxx.xlsx\r\r\n"
},
{"uri": "/basic/%E6%9C%89%E9%97%9Cthemes%E8%A8%AD%E5%AE%9A.html","title": "有關variant 的config.toml",
	"tags": [],
	"description": "config.toml 有關menu",
	"content": "TOML JSON 的對照範例 config.toml 的設定\n背景 這裡的config 用的是toml xxxxx - 本地toml 的參考\nbaseURL 最重要的設定是 #第一個不要斜線,最後一個要斜線,如下\nbaseURL: \u0026quot;/\u0026quot; #如果不需要路徑,這樣就可以,否則例如要掛到ftp baseURL: \u0026quot;帳號/project/nn/\u0026quot; #第一個不要斜線,最後一個要斜線  baseURL 如果不是設定成/,則relativeURL 必須是false。否則會重複出現在連結路徑中。\r\r\ruglyURL menu設定 [[menu.shortcuts]] name = \u0026quot;\u0026lt;i class='fab fa-github'\u0026gt;\u0026lt;/i\u0026gt; Github repo\u0026quot; identifier = \u0026quot;ds\u0026quot; url = \u0026quot;https://github.com/matcornic/hugo-theme-learn\u0026quot; weight = 10  分塊的寫法,示範怎樣拿取上面的值。\n{{with .Site.Menus.shortcuts}} \u0026lt;section id=\u0026quot;shortcuts\u0026quot;\u0026gt; \u0026lt;h3\u0026gt;{{ if not $disableShortcutsTitle}}{{ T \u0026quot;Shortcuts-Title\u0026quot;}}{{ end }}\u0026lt;/h3\u0026gt; \u0026lt;ul\u0026gt; {{ range sort . \u0026quot;Weight\u0026quot;}} \u0026lt;li\u0026gt; {{.Pre}}\u0026lt;a class=\u0026quot;padding\u0026quot; href=\u0026quot;{{.URL | absURL }}\u0026quot;\u0026gt;{{safeHTML .Name}}\u0026lt;/a\u0026gt;{{.Post}} \u0026lt;/li\u0026gt; {{end}} \u0026lt;/ul\u0026gt; \u0026lt;/section\u0026gt; {{end}}   .Site.Menus 這是HUGO的內定參數。 "
},
{"uri": "/basic/%E6%AD%A3%E8%A6%8F%E8%A1%A8%E9%81%94%E5%BC%8F.html","title": "正規表達式",
	"tags": [],
	"description": "正規表達式",
	"content": "## - 參考hugo\n{{ $xx := replaceRE \u0026quot;^.?([\\\\d][\\\\d|.]?[\\\\d|.]*).*\u0026quot; \u0026quot;$1\u0026quot; (.Get 0)}} {{ $xx }}  抽第一組數字 {{\u0026lt; test1 \u0026quot;t1 xx d\u0026quot; \u0026gt;}} =\u0026gt; 1 {{\u0026lt; test1 \u0026quot;1 xx d\u0026quot; \u0026gt;}} 1 {{\u0026lt; test1 \u0026quot;s 1 xx d\u0026quot; \u0026gt;}} s 1 xx d {{\u0026lt; test1 \u0026quot;t1.2 x3 dd.d1d \u0026gt;}} 1.2 {{\u0026lt; test1 \u0026quot;t12.2.3 xx d\u0026quot; \u0026gt;}} 12.2.3 {{\u0026lt; test1 \u0026quot; 12.2.3 xx d\u0026quot; \u0026gt;}} 12.2.3\n"
},
{"uri": "/basic/gallery.html","title": "短碼 - foldergallery",
	"tags": [""],
	"description": "測試紀錄",
	"content": " test1 ex1 {{*\u0026lt; foldergallery path=\u0026quot;./gallery.files/\u0026quot; cols=\u0026quot;4\u0026quot;\u0026gt;*}} 內定show=\u0026quot;one\u0026quot; more\r\r\r\r\r\r\r\r\r\r\r\rdiv.galleryimgs+a{\rdisplay:block;\r}\r\r\r$(document).ready(function(){\r$('.gallery-5d2bf4e786808748c9feb89b0aaf74d7').featherlightGallery({\rgallery: {\rnext: ''\r}\r});\r});\r ex2 {{*\u0026lt; foldergallery path=\u0026quot;./gallery.files/\u0026quot; cols=\u0026quot;4\u0026quot; show=\u0026quot;all\u0026quot;\u0026gt;*}} 全部顯示,分為4欄 \r\r\r\r\r\r\r\r\r\r\r\rdiv.galleryimgs+a{\rdisplay:block;\r}\r\r\r$(document).ready(function(){\r$('.gallery-5d2bf4e786808748c9feb89b0aaf74d7').featherlightGallery({\rgallery: {\rnext: ''\r}\r});\r});\r ex3 \rpre 下的行為\rmore            div.galleryimgs+a{ display:block; } \n $(document).ready(function(){ $('.gallery-5d2bf4e786808748c9feb89b0aaf74d7').featherlightGallery({ gallery: { next: '' } }); });    改進  變更上下一個的顏色\n 只顯示第一個。選擇第一個child, ::first\n 30個css   "
},
{"uri": "/basic/%E7%9F%AD%E7%A2%BCexpand.html","title": "短碼 expand",
	"tags": [],
	"description": "紀錄測試範例",
	"content": " 在stata中使用expand /stata/%E7%9F%AD%E7%A2%BCexpand-stata.html 其他相關:在stata上的測試案例(variant)\n短碼: expand.html 1 2 3 4 5 6 7 8 9 10 11 12 13 14  {{- print \u0026#34;\u0026#34; -}}\u0026lt;div class=\u0026#34;expand\u0026#34;\u0026gt; \u0026lt;div class=\u0026#34;expand-label\u0026#34; style=\u0026#34;cursor: pointer;\u0026#34; onclick=\u0026#34;$h = $(this);$h.siblings(\u0026#39;div.expand-content\u0026#39;).slideToggle(100,function () {$h.children(\u0026#39;i\u0026#39;).attr(\u0026#39;class\u0026#39;,function () {return $h.siblings(\u0026#39;div.expand-content\u0026#39;).is(\u0026#39;:visible\u0026#39;) ? \u0026#39;fa fa-chevron-down\u0026#39; : \u0026#39;fa fa-chevron-right\u0026#39;;});});\u0026#34;\u0026gt; \u0026lt;i style=\u0026#34;font-size:x-small;\u0026#34; class=\u0026#34;fa fa-chevron-right\u0026#34; color=\u0026#34;yellow\u0026#34;\u0026gt;\u0026lt;/i\u0026gt; \u0026lt;span\u0026gt; {{- $expandMessage := T \u0026#34;Expand-title\u0026#34; -}} {{- if .IsNamedParams -}} {{- (.Get \u0026#34;default\u0026#34; | default $expandMessage )| emojify -}} {{- else -}} {{- (.Get 0 | default $expandMessage) | emojify -}} {{- end -}} \u0026lt;/span\u0026gt; \u0026lt;/div\u0026gt; \u0026lt;div class=\u0026#34;expand-content\u0026#34; style=\u0026#34;display: none;\u0026#34;\u0026gt;{{- trim .Inner \u0026#34;\\r\\n\u0026#34; -}}\u0026lt;/div\u0026gt; \u0026lt;/div\u0026gt;{{print \u0026#34;\u0026#34; -}}  \n測試區 測試紀錄  執行碼1\n 裡面用highlight 短碼,效果不好\n{{\u0026lt; expand \u0026quot;highlight短碼 + incode(false)\u0026quot; incode=false \u0026gt;}} {{\u0026lt; highlight html \u0026quot;linenos=table\u0026quot; \u0026gt;}} \u0026lt;div class=\u0026quot;expand-content\u0026quot; style=\u0026quot;display: none;\u0026quot;\u0026gt; {{- trim .Inner \u0026quot;\\r\\n\u0026quot; -}} \u0026lt;/div\u0026gt; {{\u0026lt; /highlight \u0026gt;}} {{\u0026lt; /expand \u0026gt;}}  \rhighlight短碼 + incode(false)\r1 2 3  div class=\"expand-content\" style=\"display: none;\" {{- trim .Inner \"\\r\\n\" -}} div     執行碼2\n 裡面用普通的chunk👌\n{{\u0026lt; expand title=\u0026quot;incode(false)\u0026quot; incode=false \u0026gt;}} ```html \u0026lt;div class=\u0026quot;expand-content\u0026quot; style=\u0026quot;display: none;\u0026quot;\u0026gt; {{- trim .Inner \u0026quot;\\r\\n\u0026quot; -}} \u0026lt;/div\u0026gt; ``` {{\u0026lt; /expand \u0026gt;}}  \rincode(false)\r\u0026lt;div class=\u0026quot;expand-content\u0026quot; style=\u0026quot;display: none;\u0026quot;\u0026gt; {{- trim .Inner \u0026quot;\\r\\n\u0026quot; -}} \u0026lt;/div\u0026gt;     "
},
{"uri": "/basic/%E7%9F%AD%E7%A2%BCattachfiles.html","title": "短碼attachfiles",
	"tags": [],
	"description": "短碼attachfiles",
	"content": "使用範例  找當前頁面子目錄mdshowsc.files所有txt 副檔名。\n{{\u0026lt; test1 path=\u0026quot;mdshowsc.files\u0026quot; pattern=\u0026quot;\\.txt\u0026quot; \u0026gt;}}   ✔ pattern=\u0026quot;\\.txt\u0026quot;,\u0026quot;.txt\u0026quot;,\u0026quot;.*.txt\u0026quot; ❌pattern=\u0026quot;*.txt\u0026quot;  找static/*.pptx\n{{\u0026lt; test1 root=\u0026quot;static\u0026quot; path=\u0026quot;\u0026quot; pattern=\u0026quot;\\.pptx\u0026quot; \u0026gt;}}    如果要掛上TOC,則要在面板上指定 report: true\r\r\r舊版本紀錄 shortcode: attachfiles.html\n{{/* title: root: content or static folder,path: 給定,或者就是內定資料夾 pattern: regular express of file name */}} \u0026lt;div class=\u0026quot;nopre attachments {{ with .Get \u0026quot;style\u0026quot;}}{{- . -}}{{- end -}}\u0026quot;\u0026gt; \u0026lt;label\u0026gt; \u0026lt;i class=\u0026quot;fas fa-paperclip\u0026quot; aria-hidden=\u0026quot;true\u0026quot;\u0026gt;\u0026lt;/i\u0026gt; {{- with .Get \u0026quot;title\u0026quot; -}}{{- .| emojify -}}{{- else -}}{{- \u0026quot;附件\u0026quot; -}}{{- end -}} \u0026lt;/label\u0026gt; \u0026lt;!--除非使用者指定,否則內定是content/當前頁面目錄--\u0026gt; {{- $root := default \u0026quot;content\u0026quot; (.Get \u0026quot;root\u0026quot;) -}} {{- $pattern := default \u0026quot;*\u0026quot; (.Get \u0026quot;pattern\u0026quot;) -}} \u0026lt;!--$folder:除非使用者指定,否則內定是[檔案名稱.files]子目錄--\u0026gt; {{- $srcdir := (printf \u0026quot;%s.files/\u0026quot; .Page.File.BaseFileName) -}} {{- $folder := default $srcdir (or (.Get \u0026quot;folder\u0026quot;) (.Get \u0026quot;path\u0026quot;)) -}} \u0026lt;!-- 給定的folder 相對於本頁面DIR --\u0026gt; {{- $pagedir := replace .Page.File.Dir \u0026quot;\\\\\u0026quot; \u0026quot;/\u0026quot; -}} \u0026lt;!--資料夾存在則繼續--\u0026gt; {{ path.Join $root $pagedir $folder}}\t{{- with fileExists (path.Join $root $pagedir $folder) -}} {{- range (readDir ( path.Join $root $pagedir $folder)) -}} {{- $.Scratch.Add \u0026quot;filelist\u0026quot; . -}} {{- end -}} {{- end -}} {{- with fileExists (path.Join $root $folder) -}} {{- range (readDir ( path.Join $root $pagedir $folder)) -}} {{- $.Scratch.Add \u0026quot;filelist\u0026quot; (slice .) -}} {{- end -}} {{- end -}} {{- $filelist := .Scratch.Get \u0026quot;filelist\u0026quot; -}} {{- range $filelist -}} {{.Name}} {{- end -}} \u0026lt;/div\u0026gt; "
},
{"uri": "/basic/short_demo_container_md.html","title": "短碼demo_container_md",
	"tags": ["relURL"],
	"description": "使用和測試",
	"content": "要設定HTML實驗的短碼,會涉及到怎樣取得html,css,js這裡就會用到relURL。\n背景和材料 結論 🧚‍♀️🧚‍♀️如果relativeurl=true必須baseURL=\u0026quot;/\u0026quot;,但是傳到網站的時候，index.json拿不到\n🧚‍♀️🧚‍♀️如果baseURL不是 \u0026quot;/\u0026quot;，必須relativeurl=false\nrelURL in config.toml\nbaseURL=\u0026quot;/\u0026quot; relativeurls = true  如果短碼如下\n\u0026lt;br/\u0026gt; {{ $fn}}\u0026lt;br/\u0026gt; \u0026lt;br/\u0026gt; {{ $fn | 🏷relURL}}\u0026lt;br/\u0026gt; \u0026lt;iframe class=\u0026quot;Result\u0026quot; src={{ $fn| 🏷relURL}} \u0026gt; \u0026lt;/iframe\u0026gt;  短碼實驗的對象:md位置\ncontent/web/javascript/part1basic/ - t3_dom_mouse_event.md - t3_dom_mouse_event.files/ex_mouse1.html  如果我把這個路徑 t3_DOM_mouse_event.files/ex_mouse1.html 傳給函數relURL，會把baseURL(這裡是/) 添上，結果是 - 🏷/🏷t3_DOM_mouse_event.files/ex_mouse1.html - \u0026lt;iframe class=\u0026quot;Result\u0026quot; src=🏷../../..🏷/t3_DOM_mouse_event.files/ex_mouse1.html \u0026gt; \u0026lt;/iframe\u0026gt;\n一樣傳給relURL但是iframe的src 多了../../.. ⁉ 我猜是根據目前位置比對\u0026quot;content位置\u0026quot;,所以剛好是3層。\n但是如果短碼內部改為 iframe 裡面的src不再傳給relURL,如下\n\u0026lt;br/\u0026gt; {{ $fn}}\u0026lt;br/\u0026gt; \u0026lt;br/\u0026gt; {{ $fn | relURL}}\u0026lt;br/\u0026gt; 🏷 \u0026lt;iframe class=\u0026quot;Result\u0026quot; src={{✔ $fn}} \u0026gt; \u0026lt;/iframe\u0026gt;  則結果就可以。\n\u0026lt;br/\u0026gt; t3_DOM_mouse_event.files/ex_mouse1.html\u0026lt;br/\u0026gt; \u0026lt;br/\u0026gt; /t3_DOM_mouse_event.files/ex_mouse1.html\u0026lt;br/\u0026gt; 🏷 仍然有加上baseURL(\u0026quot;/\u0026quot;) \u0026lt;iframe class=\u0026quot;Result\u0026quot; src=t3_DOM_mouse_event.files/ex_mouse1.html \u0026gt; \u0026lt;/iframe\u0026gt;  🏷也就是說一樣的relURL,會做不一樣的動作,上面的第二2\n短碼 html_demo_md.html fileExists 這個函數吃的是contents下面的路徑,例如(/contents/web),則 web/javascript/part1basic/t3_DOM_mouse_event.files/ex_mouse1.html 如果這樣的話,就是說,大部分檔案系統的相關函數,都是預設content開頭?\n\rtest\r{{ $_hugo_config := `{ \u0026quot;version\u0026quot;: 1 }` }} {{ $hideCode := default false (.Get \u0026quot;hideCode\u0026quot; )}} {{ $hideResut := default false (.Get \u0026quot;hideResult\u0026quot; )}} {{ $hideEdit := default false (.Get \u0026quot;hideEdit\u0026quot; )}} {{ $filePath := .Get \u0026quot;filePath\u0026quot; }} {{/* 指定的路徑不存在時,找預設路徑 */}} {{ $tfn1 := path.Join .Page.File.Dir $filePath }} {{ $tfn2 := path.Join .Page.File.Dir (printf \u0026quot;%s.files/%s\u0026quot; .Page.File.BaseFileName $filePath) }} {{ $diskfn := cond (fileExists $tfn1) $tfn1 ( cond (fileExists $tfn2) $tfn2 \u0026quot;\u0026quot;) }} {{ $fn := cond (fileExists $tfn1) $filePath (printf \u0026quot;%s.files/%s\u0026quot; .Page.File.BaseFileName $filePath) }} {{ with $diskfn}} {{ $syntax := path.Ext $fn }} {{ $id := now.UnixNano }} {{/* $id := ($fn | urlize) | replaceRE \u0026quot;[/|.]\u0026quot; \u0026quot;_\u0026quot; */}} \u0026lt;div class=\u0026quot;demoContainer\u0026quot;\u0026gt; {{ if (not $hideCode)}} \u0026lt;div class=\u0026quot;code-copy\u0026quot; id=\u0026quot;{{$fn | urlize}}\u0026quot;\u0026gt; \u0026lt;button class=\u0026quot;btn-primary\u0026quot; onclick=\u0026quot;expandsw(this,'{{$id}}')\u0026quot;\u0026gt;展開\u0026lt;/button\u0026gt; \u0026lt;a href= {{$fn}} target=\u0026quot;_blank\u0026quot;\u0026gt; 原始碼({{ path.Base $fn }})\u0026lt;/a\u0026gt; \u0026lt;pre id=\u0026quot;{{$id}}\u0026quot;\u0026gt;\u0026lt;code class=\u0026quot;language-{{$syntax}}\u0026quot;\u0026gt;{{- readFile $diskfn -}}\u0026lt;/code\u0026gt;\u0026lt;/pre\u0026gt; \u0026lt;/div\u0026gt; {{ end }} {{ if (not $hideEdit)}} \u0026lt;button class=\u0026quot;btn-primary\u0026quot; onclick=\u0026quot;switchEdit(this)\u0026quot;\u0026gt;編輯\u0026lt;/button\u0026gt; \u0026lt;textarea class=\u0026quot;switchable switchEdit\u0026quot; \u0026gt; {{ readFile $diskfn }} \u0026lt;/textarea\u0026gt; \u0026lt;button class=\u0026quot;btn-primary switchable switchEdit\u0026quot; onclick=\u0026quot;execArea(this)\u0026quot;\u0026gt;執行\u0026lt;/button\u0026gt;\u0026lt;br/\u0026gt; {{ end }} {{/* \u0026lt;div contentEditable=\u0026quot;true\u0026quot; class=\u0026quot;switchable switchEdit\u0026quot;\u0026gt; {{ readFile $fn }} {{ readFile $fn | replaceRE \u0026quot;^(?:[\\t ]*(?:\\r?\\n|\\r))+\u0026quot; \u0026quot;\u0026quot; }} \u0026lt;/div\u0026gt;\t*/}} {{ if (not $hideResut)}} \u0026lt;iframe class=\u0026quot;Result\u0026quot; src={{ $fn}} \u0026gt; \u0026lt;/iframe\u0026gt; {{ end }} \u0026lt;/div\u0026gt; {{end}}  "
},
{"uri": "/basic/%E7%9F%AD%E7%A2%BCdocfile%E8%A8%BB%E8%A7%A3.html","title": "短碼docfile註解.md",
	"tags": [],
	"description": "短碼docfile註解.md",
	"content": "網路上的版本\n{{ $file := .Get 0}} {{ $filepath := $file }} {{ $syntax := index (split $file \u0026quot;.\u0026quot;) 1 }} {{ $syntaxoverride := eq (len .Params) 2 }} \u0026lt;div class=\u0026quot;code-copy\u0026quot; id=\u0026quot;{{$file | urlize}}\u0026quot;\u0026gt; \u0026lt;div class=\u0026quot;code-copy-header\u0026quot;\u0026gt;\u0026lt;div class=\u0026quot;action-buttons\u0026quot;\u0026gt;\u0026lt;/div\u0026gt;\u0026lt;span title=\u0026quot;\u0026quot; class=\u0026quot;filename\u0026quot;\u0026gt;{{$filepath}}\u0026lt;/span\u0026gt;\u0026lt;i class=\u0026quot;icon-{{$syntax}} input\u0026quot;\u0026gt;\u0026lt;/i\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;button class=\u0026quot;copy-button\u0026quot; title=\u0026quot;Copy to clipboard\u0026quot; data-clipboard-snippet\u0026gt; \u0026lt;div class=\u0026quot;copy-text\u0026quot;\u0026gt;\u0026lt;i class=\u0026quot;icon-clipboard\u0026quot;\u0026gt;\u0026lt;/i\u0026gt; COPY\u0026lt;/div\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;pre\u0026gt;\u0026lt;code class=\u0026quot;language-{{if $syntaxoverride}}{{.Get 1}}{{else}}{{$syntax}}{{end}}\u0026quot;\u0026gt;{{- readFile $file -}}\u0026lt;/code\u0026gt;\u0026lt;/pre\u0026gt; \u0026lt;/div\u0026gt;  主要看最後兩行。\n相對路徑版本\n{{ $file := .Get 0}} {{ $filepath := path.Join .Page.File.Dir $file }} {{ $syntax := index (split $file \u0026quot;.\u0026quot;) 1 }} {{ $syntaxoverride := eq (len .Params) 2 }} \u0026lt;div class=\u0026quot;code-copy\u0026quot; id=\u0026quot;{{$file | urlize}}\u0026quot;\u0026gt; \u0026lt;div class=\u0026quot;code-copy-header\u0026quot;\u0026gt;\u0026lt;div class=\u0026quot;action-buttons\u0026quot;\u0026gt;\u0026lt;/div\u0026gt;\u0026lt;span title=\u0026quot;\u0026quot; class=\u0026quot;filename\u0026quot;\u0026gt;{{$filepath}}\u0026lt;/span\u0026gt;\u0026lt;i class=\u0026quot;icon-{{$syntax}} input\u0026quot;\u0026gt;\u0026lt;/i\u0026gt;\u0026lt;/div\u0026gt; \u0026lt;button class=\u0026quot;copy-button\u0026quot; title=\u0026quot;Copy to clipboard\u0026quot; data-clipboard-snippet\u0026gt; \u0026lt;div class=\u0026quot;copy-text\u0026quot;\u0026gt;\u0026lt;i class=\u0026quot;icon-clipboard\u0026quot;\u0026gt;\u0026lt;/i\u0026gt; COPY\u0026lt;/div\u0026gt; \u0026lt;/button\u0026gt; \u0026lt;pre\u0026gt;\u0026lt;code class=\u0026quot;language-{{if $syntaxoverride}}{{.Get 1}}{{else}}{{$syntax}}{{end}}\u0026quot;\u0026gt;{{- readFile $filepath -}}\u0026lt;/code\u0026gt;\u0026lt;/pre\u0026gt; \u0026lt;/div\u0026gt;  目前版本 利用這個方法的好處是,可以自訂比較美觀的外表,例如原來的版本還有COPY的按鈕\n{{ $file := cond .IsNamedParams (.Get \u0026quot;file\u0026quot;) (.Get 0) }} {{ $lang := cond .IsNamedParams (.Get \u0026quot;lang\u0026quot;) (cond (eq (len .Params) 2) (.Get 1) \u0026quot;\u0026quot;) }} {{ $lang := default (index (split $file \u0026quot;.\u0026quot;) 1) $lang }} {{ $relpath := path.Join .Page.File.Dir $file }} \u0026lt;pre\u0026gt;\u0026lt;code class=\u0026quot;language-{{$lang}}\u0026quot;\u0026gt;{{- readFile $relpath -}}\u0026lt;/code\u0026gt;\u0026lt;/pre\u0026gt;  使用方法: 參數file,lang, 也可以只用file參數,直接指定路徑和檔案名稱,下面的範例打光variant.js在當前MD所在子目錄。 {{\u0026lt; docfile file=\u0026quot;variant.js\u0026quot; \u0026gt;}}\n這是甚麼 hugo作者的網案\n{{ $package := (index .Params 0) }} {{ $listname := (index .Params 1) }} {{ $list := (index (index .Site.Data.docs $package) $listname) }} {{ $fields := after 2 .Params }} \u0026lt;table class=\u0026quot;table table-bordered\u0026quot;\u0026gt; \u0026lt;tr\u0026gt; {{ range $fields }} \u0026lt;th\u0026gt;{{ . }}\u0026lt;/th\u0026gt; {{ end }} \u0026lt;/tr\u0026gt; {{ range $list }} \u0026lt;tr\u0026gt; {{ range $k, $v := . }} {{ $.Scratch.Set $k $v }} {{ end }} {{ range $fields }} \u0026lt;td\u0026gt;{{ $.Scratch.Get . }}\u0026lt;/td\u0026gt; {{ end }} \u0026lt;/tr\u0026gt; {{ end }} \u0026lt;/table\u0026gt; "
},
{"uri": "/basic/%E7%9F%AD%E7%A2%BCgithub.html","title": "短碼github.html",
	"tags": ["github"],
	"description": "如何使用短碼github連結GITHUB上的程式碼",
	"content": " 插入github 上的程式碼 顯示github上的程式碼 ,可以利用短碼\n⛳範例(來自)\n例如要插入的檔案在https://github.com/airbone5/blogtest/blob/master/content/post/2015-01-01-lorem-ipsum.md,則指令如下\n{{\u0026lt; github repo=\u0026quot;airbone5/blogtest\u0026quot; file=\u0026quot;/content/post/2015-01-01-lorem-ipsum.md\u0026quot; lang=\u0026quot;md\u0026quot; \u0026gt;}}  參數只有repo和 file 參看下圖 短碼github.files/filelocation.png\nmore   div.galleryimgs+a{ display:block; } \n $(document).ready(function(){ $('.gallery-1c5c13b68fad1e4fd36d2a20af977a37').featherlightGallery({ gallery: { next: '' } }); });  \r\r執行結果 \u0026gt; 檔案/content/post/2015-01-01-lorem-ipsum.md:內容\n--- date: \u0026#34;2015-01-01T13:09:13-06:00\u0026#34; title: Lorem Ipsum --- **Lorem ipsum** dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore _magna aliqua_. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. \n另一個範例 browser網址欄位上顯示的是 https://github.com/KevinGimbel/hugo-kg-shortcodes/blob/main/layouts/shortcodes/codepen.html 但是使用github 短碼的時候,這個路徑名稱不能用(參考上圖的❌)\n而是{{\u0026lt; github repo=\u0026quot;KevinGimbel/hugo-kg-shortcodes\u0026quot; file=\u0026quot;layouts/shortcodes/codepen.html\u0026quot; \u0026gt;}}\n其執行結果如下: 檔案layouts/shortcodes/codepen.html:內容\n{{ .Page.Scratch.Set \u0026#34;kg_include_codepen\u0026#34; true }} {{ $height := .Get \u0026#34;height\u0026#34; | default \u0026#34;256\u0026#34; }} {{ $theme := .Get \u0026#34;theme\u0026#34; | default \u0026#34;dark\u0026#34; }} {{ $result := .Get \u0026#34;result\u0026#34; | default \u0026#34;html,result\u0026#34; }} {{ $user := .Get \u0026#34;user\u0026#34; | default .Site.Params.kg_shortcodes.Codepen.User }} {{ $editable := .Get \u0026#34;editable\u0026#34; | default .Site.Params.kg_shortcodes.Codepen.Editable }} {{ $preview := .Get \u0026#34;preview\u0026#34; | default .Site.Params.kg_shortcodes.Codepen.Preview }} \u0026lt;p data-height=\u0026#34;{{ $height }}\u0026#34; data-theme-id=\u0026#34;{{ $theme }}\u0026#34; data-slug-hash=\u0026#34;{{ .Get \u0026#34;slug\u0026#34; }}\u0026#34; data-default-tab=\u0026#34;{{ $result }}\u0026#34; data-user=\u0026#34;{{ $user }}\u0026#34; data-embed-version=\u0026#34;2\u0026#34; data-pen-title=\u0026#34;{{ .Get \u0026#34;title\u0026#34;}}\u0026#34; data-preview=\u0026#34;{{ $preview }}\u0026#34; data-editable=\u0026#34;{{ $editable }}\u0026#34; class=\u0026#34;codepen\u0026#34;\u0026gt; See the Pen \u0026lt;a href=\u0026#34;https://codepen.io/kevingimbel/pen/{{ .Get \u0026#34;slug\u0026#34; }}/\u0026#34;\u0026gt;{{ .Get \u0026#34;title\u0026#34; }}\u0026lt;/a\u0026gt; on \u0026lt;a href=\u0026#34;https://codepen.io\u0026#34;\u0026gt;CodePen\u0026lt;/a\u0026gt;. \u0026lt;/p\u0026gt; \n😒這是做甚麼用的,好像和gist 有關的臨時紀錄 在網址上打入https://api.github.com/repos/KevinGimbel/hugo-kg-shortcodes/contents/layouts/shortcodes/codepen.html 傳回的內容:\n{ \u0026quot;name\u0026quot;: \u0026quot;codepen.html\u0026quot;, \u0026quot;path\u0026quot;: \u0026quot;layouts/shortcodes/codepen.html\u0026quot;, \u0026quot;sha\u0026quot;: \u0026quot;007bf610570c3b791d463e0b1e8f8b7a531ae2d3\u0026quot;, \u0026quot;size\u0026quot;: 893, \u0026quot;url\u0026quot;: \u0026quot;https://api.github.com/repos/KevinGimbel/hugo-kg-shortcodes/contents/layouts/shortcodes/codepen.html?ref=main\u0026quot;, \u0026quot;html_url\u0026quot;: \u0026quot;https://github.com/KevinGimbel/hugo-kg-shortcodes/blob/main/layouts/shortcodes/codepen.html\u0026quot;, \u0026quot;git_url\u0026quot;: \u0026quot;https://api.github.com/repos/KevinGimbel/hugo-kg-shortcodes/git/blobs/007bf610570c3b791d463e0b1e8f8b7a531ae2d3\u0026quot;, \u0026quot;download_url\u0026quot;: \u0026quot;https://raw.githubusercontent.com/KevinGimbel/hugo-kg-shortcodes/main/layouts/shortcodes/codepen.html\u0026quot;, \u0026quot;type\u0026quot;: \u0026quot;file\u0026quot;, \u0026quot;content\u0026quot;: \u0026quot;e3sgLlBhZ2UuU2NyYXRjaC5TZXQgImtnX2luY2x1ZGVfY29kZXBlbiIgdHJ1\\nZSB9fQoKe3sgJGhlaWdodCA6PSAuR2V0ICJoZWlnaHQiIHwgZGVmYXVsdCAi\\nMjU2IiB9fQp7eyAkdGhlbWUgOj0gLkdldCAidGhlbWUiIHwgZGVmYXVsdCAi\\nZGFyayIgfX0Ke3sgJHJlc3VsdCA6PSAuR2V0ICJyZXN1bHQiIHwgZGVmYXVs\\ndCAiaHRtbCxyZXN1bHQiIH19Cnt7ICR1c2VyIDo9IC5HZXQgInVzZXIiIHwg\\nZGVmYXVsdCAuU2l0ZS5QYXJhbXMua2dfc2hvcnRjb2Rlcy5Db2RlcGVuLlVz\\nZXIgfX0Ke3sgJGVkaXRhYmxlIDo9IC5HZXQgImVkaXRhYmxlIiB8IGRlZmF1\\nbHQgLlNpdGUuUGFyYW1zLmtnX3Nob3J0Y29kZXMuQ29kZXBlbi5FZGl0YWJs\\nZSB9fQp7eyAkcHJldmlldyA6PSAuR2V0ICJwcmV2aWV3IiB8IGRlZmF1bHQg\\nLlNpdGUuUGFyYW1zLmtnX3Nob3J0Y29kZXMuQ29kZXBlbi5QcmV2aWV3IH19\\nCjxwIGRhdGEtaGVpZ2h0PSJ7eyAkaGVpZ2h0IH19IiBkYXRhLXRoZW1lLWlk\\nPSJ7eyAkdGhlbWUgfX0iIGRhdGEtc2x1Zy1oYXNoPSJ7eyAuR2V0ICJzbHVn\\nIiB9fSIgZGF0YS1kZWZhdWx0LXRhYj0ie3sgJHJlc3VsdCB9fSIgZGF0YS11\\nc2VyPSJ7eyAkdXNlciB9fSIgZGF0YS1lbWJlZC12ZXJzaW9uPSIyIiBkYXRh\\nLXBlbi10aXRsZT0ie3sgLkdldCAidGl0bGUifX0iIGRhdGEtcHJldmlldz0i\\ne3sgJHByZXZpZXcgfX0iIGRhdGEtZWRpdGFibGU9Int7ICRlZGl0YWJsZSB9\\nfSIgY2xhc3M9ImNvZGVwZW4iPgogICAgU2VlIHRoZSBQZW4gPGEgaHJlZj0i\\naHR0cHM6Ly9jb2RlcGVuLmlvL2tldmluZ2ltYmVsL3Blbi97eyAuR2V0ICJz\\nbHVnIiB9fS8iPnt7IC5HZXQgInRpdGxlIiB9fTwvYT4gb24gPGEgaHJlZj0i\\naHR0cHM6Ly9jb2RlcGVuLmlvIj5Db2RlUGVuPC9hPi4KPC9wPgo=\\n\u0026quot;, \u0026quot;encoding\u0026quot;: \u0026quot;base64\u0026quot;, \u0026quot;_links\u0026quot;: { \u0026quot;self\u0026quot;: \u0026quot;https://api.github.com/repos/KevinGimbel/hugo-kg-shortcodes/contents/layouts/shortcodes/codepen.html?ref=main\u0026quot;, \u0026quot;git\u0026quot;: \u0026quot;https://api.github.com/repos/KevinGimbel/hugo-kg-shortcodes/git/blobs/007bf610570c3b791d463e0b1e8f8b7a531ae2d3\u0026quot;, \u0026quot;html\u0026quot;: \u0026quot;https://github.com/KevinGimbel/hugo-kg-shortcodes/blob/main/layouts/shortcodes/codepen.html\u0026quot; } }  "
},
{"uri": "/basic/%E7%B7%A8%E8%99%9F.html","title": "編號",
	"tags": [],
	"description": "編號",
	"content": " 參考  這是\n/* Auto Numbering */ body {counter-reset: h2} h2 {counter-reset: h3} h3 {counter-reset: h4} h4 {counter-reset: h5} article[autonumbering] h2:before {counter-increment: h2; content: counter(h2) \u0026quot;. \u0026quot;} article[autonumbering] h3:before {counter-increment: h3; content: counter(h2) \u0026quot;.\u0026quot; counter(h3) \u0026quot;. \u0026quot;} article[autonumbering] h4:before {counter-increment: h4; content: counter(h2) \u0026quot;.\u0026quot; counter(h3) \u0026quot;.\u0026quot; counter(h4) \u0026quot;. \u0026quot;} article[autonumbering] .toc__menu ul { counter-reset: item } article[autonumbering] .toc__menu li a:before { content: counters(item, \u0026quot;.\u0026quot;) \u0026quot;. \u0026quot;; counter-increment: item }  "
},
{"uri": "/basic/%E8%A8%8E%E8%AB%96%E5%8D%80.html","title": "討論區",
	"tags": [],
	"description": "討論區",
	"content": "在custom-footer.html 中可以加入\n\u0026lt;hr/\u0026gt; {{ partial \u0026quot;disqus.html\u0026quot; . }} "
}
,
{"uri": "/r/chunk_output.html","title": "chunk output in Rmarkdown",
	"tags": ["blogdown", "r"],
	"description": "輸出",
	"content": " 結論 不能 {{\u0026lt; notice tip \u0026gt;}} 只能 {{% notice tip %}}，就是說只能使用%❓。\ntip 1\ntip 2\n 和RMD檔案比較,沒差異 只是要注意資料夾必須小寫 相關的設定在theme.css    note 1\nnote 2\n  note 1\nnote 2\n  note 1\nnote 2\n  摺疊輸出 hist(1:10)   Click for Answer  figure library(ggplot2)  #\u0026gt; Warning: package 'ggplot2' was built under R version 4.0.5  oplot \u0026lt;- ggplot(Orange, aes(x = age, y = circumference, colour = Tree)) + geom_point() + geom_line() + guides(colour = FALSE) + theme_bw()  #\u0026gt; Warning: `guides(\u0026lt;scale\u0026gt; = FALSE)` is deprecated. Please use `guides(\u0026lt;scale\u0026gt; = #\u0026gt; \u0026quot;none\u0026quot;)` instead.  oplot  "
},
{"uri": "/r/global_options.html","title": "global option in R",
	"tags": ["R", "option"],
	"description": "甚麼是global options",
	"content": " options 沒看到所謂的global option: blogdown.method\noptions(); #\u0026gt; $add.smooth #\u0026gt; [1] TRUE #\u0026gt; #\u0026gt; $blogdown.hugo.version #\u0026gt; [1] \u0026quot;0.84.4\u0026quot; #\u0026gt; #\u0026gt; $blogdown.knit.on_save #\u0026gt; [1] TRUE #\u0026gt; #\u0026gt; $blogdown.method #\u0026gt; [1] \u0026quot;custom\u0026quot; #\u0026gt; #\u0026gt; $blogdown.serve_site.startup #\u0026gt; [1] FALSE #\u0026gt; #\u0026gt; $browserNLdisabled #\u0026gt; [1] FALSE #\u0026gt; #\u0026gt; $CBoundsCheck #\u0026gt; [1] FALSE #\u0026gt; #\u0026gt; $check.bounds #\u0026gt; [1] FALSE #\u0026gt; #\u0026gt; $citation.bibtex.max #\u0026gt; [1] 1 #\u0026gt; #\u0026gt; $continue #\u0026gt; [1] \u0026quot;+ \u0026quot; #\u0026gt; #\u0026gt; $contrasts #\u0026gt; unordered ordered #\u0026gt; \u0026quot;contr.treatment\u0026quot; \u0026quot;contr.poly\u0026quot; #\u0026gt; #\u0026gt; $defaultPackages #\u0026gt; [1] \u0026quot;datasets\u0026quot; \u0026quot;utils\u0026quot; \u0026quot;grDevices\u0026quot; \u0026quot;graphics\u0026quot; \u0026quot;stats\u0026quot; \u0026quot;methods\u0026quot; #\u0026gt; #\u0026gt; $demo.ask #\u0026gt; [1] \u0026quot;default\u0026quot; #\u0026gt; #\u0026gt; $deparse.cutoff #\u0026gt; [1] 60 #\u0026gt; #\u0026gt; $device #\u0026gt; function (width = 7, height = 7, ...) #\u0026gt; { #\u0026gt; grDevices::pdf(NULL, width, height, ...) #\u0026gt; } #\u0026gt; \u0026lt;bytecode: 0x00000000199f5138\u0026gt; #\u0026gt; \u0026lt;environment: namespace:knitr\u0026gt; #\u0026gt; #\u0026gt; $device.ask.default #\u0026gt; [1] FALSE #\u0026gt; #\u0026gt; $digits #\u0026gt; [1] 7 #\u0026gt; #\u0026gt; $echo #\u0026gt; [1] FALSE #\u0026gt; #\u0026gt; $editor #\u0026gt; [1] \u0026quot;notepad\u0026quot; #\u0026gt; #\u0026gt; $encoding #\u0026gt; [1] \u0026quot;native.enc\u0026quot; #\u0026gt; #\u0026gt; $example.ask #\u0026gt; [1] \u0026quot;default\u0026quot; #\u0026gt; #\u0026gt; $expressions #\u0026gt; [1] 5000 #\u0026gt; #\u0026gt; $help.search.types #\u0026gt; [1] \u0026quot;vignette\u0026quot; \u0026quot;demo\u0026quot; \u0026quot;help\u0026quot; #\u0026gt; #\u0026gt; $help.try.all.packages #\u0026gt; [1] FALSE #\u0026gt; #\u0026gt; $help_type #\u0026gt; [1] \u0026quot;html\u0026quot; #\u0026gt; #\u0026gt; $HTTPUserAgent #\u0026gt; [1] \u0026quot;R (4.0.3 x86_64-w64-mingw32 x86_64 mingw32)\u0026quot; #\u0026gt; #\u0026gt; $install.packages.compile.from.source #\u0026gt; [1] \u0026quot;interactive\u0026quot; #\u0026gt; #\u0026gt; $internet.info #\u0026gt; [1] 2 #\u0026gt; #\u0026gt; $keep.parse.data #\u0026gt; [1] TRUE #\u0026gt; #\u0026gt; $keep.parse.data.pkgs #\u0026gt; [1] FALSE #\u0026gt; #\u0026gt; $keep.source #\u0026gt; [1] FALSE #\u0026gt; #\u0026gt; $keep.source.pkgs #\u0026gt; [1] FALSE #\u0026gt; #\u0026gt; $knitr.in.progress #\u0026gt; [1] TRUE #\u0026gt; #\u0026gt; $locatorBell #\u0026gt; [1] TRUE #\u0026gt; #\u0026gt; $mailer #\u0026gt; [1] \u0026quot;mailto\u0026quot; #\u0026gt; #\u0026gt; $matprod #\u0026gt; [1] \u0026quot;default\u0026quot; #\u0026gt; #\u0026gt; $max.print #\u0026gt; [1] 99999 #\u0026gt; #\u0026gt; $menu.graphics #\u0026gt; [1] TRUE #\u0026gt; #\u0026gt; $na.action #\u0026gt; [1] \u0026quot;na.omit\u0026quot; #\u0026gt; #\u0026gt; $nwarnings #\u0026gt; [1] 50 #\u0026gt; #\u0026gt; $OutDec #\u0026gt; [1] \u0026quot;.\u0026quot; #\u0026gt; #\u0026gt; $pager #\u0026gt; [1] \u0026quot;internal\u0026quot; #\u0026gt; #\u0026gt; $papersize #\u0026gt; [1] \u0026quot;a4\u0026quot; #\u0026gt; #\u0026gt; $PCRE_limit_recursion #\u0026gt; [1] NA #\u0026gt; #\u0026gt; $PCRE_study #\u0026gt; [1] FALSE #\u0026gt; #\u0026gt; $PCRE_use_JIT #\u0026gt; [1] TRUE #\u0026gt; #\u0026gt; $pdfviewer #\u0026gt; [1] \u0026quot;C:/PROGRA~1/R/R-40~1.3/bin/x64/open.exe\u0026quot; #\u0026gt; #\u0026gt; $pkgType #\u0026gt; [1] \u0026quot;both\u0026quot; #\u0026gt; #\u0026gt; $prompt #\u0026gt; [1] \u0026quot;\u0026gt; \u0026quot; #\u0026gt; #\u0026gt; $repos #\u0026gt; CRAN #\u0026gt; \u0026quot;@CRAN@\u0026quot; #\u0026gt; #\u0026gt; $scipen #\u0026gt; [1] 0 #\u0026gt; #\u0026gt; $show.coef.Pvalues #\u0026gt; [1] TRUE #\u0026gt; #\u0026gt; $show.error.messages #\u0026gt; [1] TRUE #\u0026gt; #\u0026gt; $show.signif.stars #\u0026gt; [1] TRUE #\u0026gt; #\u0026gt; $showErrorCalls #\u0026gt; [1] TRUE #\u0026gt; #\u0026gt; $str #\u0026gt; $str$strict.width #\u0026gt; [1] \u0026quot;no\u0026quot; #\u0026gt; #\u0026gt; $str$digits.d #\u0026gt; [1] 3 #\u0026gt; #\u0026gt; $str$vec.len #\u0026gt; [1] 4 #\u0026gt; #\u0026gt; $str$list.len #\u0026gt; [1] 99 #\u0026gt; #\u0026gt; $str$deparse.lines #\u0026gt; NULL #\u0026gt; #\u0026gt; $str$drop.deparse.attr #\u0026gt; [1] TRUE #\u0026gt; #\u0026gt; $str$formatNum #\u0026gt; function (x, ...) #\u0026gt; format(x, trim = TRUE, drop0trailing = TRUE, ...) #\u0026gt; \u0026lt;environment: 0x00000000187fbbd0\u0026gt; #\u0026gt; #\u0026gt; #\u0026gt; $str.dendrogram.last #\u0026gt; [1] \u0026quot;`\u0026quot; #\u0026gt; #\u0026gt; $stringsAsFactors #\u0026gt; [1] FALSE #\u0026gt; #\u0026gt; $tikzMetricsDictionary #\u0026gt; [1] \u0026quot;global_options-tikzDictionary\u0026quot; #\u0026gt; #\u0026gt; $timeout #\u0026gt; [1] 60 #\u0026gt; #\u0026gt; $try.outFile #\u0026gt; A connection with #\u0026gt; description \u0026quot;output\u0026quot; #\u0026gt; class \u0026quot;textConnection\u0026quot; #\u0026gt; mode \u0026quot;wr\u0026quot; #\u0026gt; text \u0026quot;text\u0026quot; #\u0026gt; opened \u0026quot;opened\u0026quot; #\u0026gt; can read \u0026quot;no\u0026quot; #\u0026gt; can write \u0026quot;yes\u0026quot; #\u0026gt; #\u0026gt; $ts.eps #\u0026gt; [1] 1e-05 #\u0026gt; #\u0026gt; $ts.S.compat #\u0026gt; [1] FALSE #\u0026gt; #\u0026gt; $unzip #\u0026gt; [1] \u0026quot;internal\u0026quot; #\u0026gt; #\u0026gt; $useFancyQuotes #\u0026gt; [1] FALSE #\u0026gt; #\u0026gt; $verbose #\u0026gt; [1] FALSE #\u0026gt; #\u0026gt; $warn #\u0026gt; [1] 0 #\u0026gt; #\u0026gt; $warning.length #\u0026gt; [1] 1000 #\u0026gt; #\u0026gt; $width #\u0026gt; [1] 80 #\u0026gt; #\u0026gt; $windowsTimeouts #\u0026gt; [1] 100 500  按照這裡的講法 ,如果我要設定總體變數,可以在.Rprofile加入這行options(blogdown.method = 'custom')。\n📝 事實上在專案*blogClassR*我就是這樣設定。\nsesion sessionInfo() #\u0026gt; R version 4.0.3 (2020-10-10) #\u0026gt; Platform: x86_64-w64-mingw32/x64 (64-bit) #\u0026gt; Running under: Windows 10 x64 (build 19043) #\u0026gt; #\u0026gt; Matrix products: default #\u0026gt; #\u0026gt; locale: #\u0026gt; [1] LC_COLLATE=Chinese (Traditional)_Taiwan.950 #\u0026gt; [2] LC_CTYPE=Chinese (Traditional)_Taiwan.950 #\u0026gt; [3] LC_MONETARY=Chinese (Traditional)_Taiwan.950 #\u0026gt; [4] LC_NUMERIC=C #\u0026gt; [5] LC_TIME=Chinese (Traditional)_Taiwan.950 #\u0026gt; #\u0026gt; attached base packages: #\u0026gt; [1] stats graphics grDevices utils datasets methods base #\u0026gt; #\u0026gt; loaded via a namespace (and not attached): #\u0026gt; [1] compiler_4.0.3 magrittr_2.0.1 htmltools_0.5.1.1 tools_4.0.3 #\u0026gt; [5] glue_1.4.2 yaml_2.2.1 stringi_1.7.3 rmarkdown_2.9 #\u0026gt; [9] knitr_1.33 stringr_1.4.0 digest_0.6.27 xfun_0.24 #\u0026gt; [13] rlang_0.4.11 evaluate_0.14  "
},
{"uri": "/r/%E5%BC%95%E6%93%8E%E6%B8%AC%E8%A9%A6%E6%BA%96%E5%82%99%E5%B7%A5%E4%BD%9C.html","title": "0. 引擎測試準備工作",
	"tags": ["s1"],
	"description": "用來比較RMD,Rmarkdown 的輸出設定",
	"content": " 有用的訊息  class.output的寫法\nknitr::opts_chunk$set( class.output = \u0026quot;bg-success\u0026quot;, class.message = \u0026quot;bg-info text-info\u0026quot;, class.warning = \u0026quot;bg-warning text-warning\u0026quot;, class.error = \u0026quot;bg-danger text-danger\u0026quot; )  hook\n 輸出設定?\n github R/build.R engine   knitr 片段  工作流程\n 讀取前版的yaml\ncontent \u0026lt;- c( \u0026quot;---\u0026quot;, \u0026quot;title: Leaflet Demo\u0026quot;, \u0026quot;output: html_document\u0026quot;, \u0026quot;params:\u0026quot;, \u0026quot; tiles:\u0026quot;, \u0026quot; label: Tiles\u0026quot;, \u0026quot; value: normal\u0026quot;, \u0026quot; input: select\u0026quot;, \u0026quot; choices:\u0026quot;, \u0026quot; - normal\u0026quot;, \u0026quot; - monochrome\u0026quot;, \u0026quot;---\u0026quot;, \u0026quot;\\n\u0026quot;, \u0026quot;This is a test document\u0026quot;) rmd_file \u0026lt;- tempfile(fileext = \u0026quot;.Rmd\u0026quot;) # 產生臨時檔案的路徑和名稱 xfun::write_utf8(content, rmd_file) # 寫入字串向量到檔案 yml_metadata \u0026lt;- rmarkdown::yaml_front_matter(rmd_file) params \u0026lt;- yml_metadata[[\u0026quot;params\u0026quot;]] ## 兩個中括號 str(params) # 向量字串轉字串 #\u0026gt; List of 1 #\u0026gt; $ tiles:List of 4 #\u0026gt; ..$ label : chr \u0026quot;Tiles\u0026quot; #\u0026gt; ..$ value : chr \u0026quot;normal\u0026quot; #\u0026gt; ..$ input : chr \u0026quot;select\u0026quot; #\u0026gt; ..$ choices: chr [1:2] \u0026quot;normal\u0026quot; \u0026quot;monochrome\u0026quot; unlink(rmd_file) #殺掉這個檔案   測試紀錄和結論 只顯示前兩個訊息  echo=c(4,5) 程式碼的部分只顯示第4和第5行 原來的程式碼\n```{r, echo=c(4, 5), message=c(1, 2), warning=2:3} for (i in 1:5) message('Here is the message ', i) for (i in 1:5) warning('Here is the warning ', i) ```  執行結果\n#\u0026gt; Here is the message 1  #\u0026gt; Here is the message 2  #\u0026gt; Warning: Here is the warning 2  #\u0026gt; Warning: Here is the warning 3  作為對比\nfor (i in 1:5) message('Here is the message ', i) #\u0026gt; Here is the message 1 #\u0026gt; Here is the message 2 #\u0026gt; Here is the message 3 #\u0026gt; Here is the message 4 #\u0026gt; Here is the message 5 for (i in 1:5) warning('Here is the warning ', i) #\u0026gt; Warning: Here is the warning 1 #\u0026gt; Warning: Here is the warning 2 #\u0026gt; Warning: Here is the warning 3 #\u0026gt; Warning: Here is the warning 4 #\u0026gt; Warning: Here is the warning 5   輸出為有捲動軸的視窗 測試碼\n```{r, attr.output='style=\u0026quot;max-height: 100px;\u0026quot;'} 1:300 ```  執行結果(❌根本沒用,參看下面產生在md的對應內容,是全部顯示)\n1:300  #\u0026gt; [1] 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 #\u0026gt; [19] 19 20 21 22 23 24 25 26 27 28 29 30 31 32 33 34 35 36 #\u0026gt; [37] 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 #\u0026gt; [55] 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 #\u0026gt; [73] 73 74 75 76 77 78 79 80 81 82 83 84 85 86 87 88 89 90 #\u0026gt; [91] 91 92 93 94 95 96 97 98 99 100 101 102 103 104 105 106 107 108 #\u0026gt; [109] 109 110 111 112 113 114 115 116 117 118 119 120 121 122 123 124 125 126 #\u0026gt; [127] 127 128 129 130 131 132 133 134 135 136 137 138 139 140 141 142 143 144 #\u0026gt; [145] 145 146 147 148 149 150 151 152 153 154 155 156 157 158 159 160 161 162 #\u0026gt; [163] 163 164 165 166 167 168 169 170 171 172 173 174 175 176 177 178 179 180 #\u0026gt; [181] 181 182 183 184 185 186 187 188 189 190 191 192 193 194 195 196 197 198 #\u0026gt; [199] 199 200 201 202 203 204 205 206 207 208 209 210 211 212 213 214 215 216 #\u0026gt; [217] 217 218 219 220 221 222 223 224 225 226 227 228 229 230 231 232 233 234 #\u0026gt; [235] 235 236 237 238 239 240 241 242 243 244 245 246 247 248 249 250 251 252 #\u0026gt; [253] 253 254 255 256 257 258 259 260 261 262 263 264 265 266 267 268 269 270 #\u0026gt; [271] 271 272 273 274 275 276 277 278 279 280 281 282 283 284 285 286 287 288 #\u0026gt; [289] 289 290 291 292 293 294 295 296 297 298 299 300   分析過程\n[markup] # defaultMarkdownHandler = \u0026quot;pandoc\u0026quot; # defaultMarkdownHandler = \u0026quot;blackfriday\u0026quot; defaultMarkdownHandler = \u0026quot;goldmark\u0026quot;  在上面的三個選項中,只有pandoc 有作用(而且.Rprofile 中的 options 不能是blogdown.method = 'markdown')。\n附上md內容\n```r 🏷甚麼都沒有 \r 1:300 #\u0026gt; [1] 1 2 3 4 --- 以下省略 --- ```   測試結果摘要  ❌blackfriday的時候  class.output 的設定,完全打亂  ❌goldmark 雖然沒有完全打亂,但也是不行。 ✔pandoc + method=markdown的組合都沒問題。 🏷只要是method=custom 都不行。  ❌錯誤範例1 沒有下面這種寫法\n```r, x this is code ``` =\u0026gt; 翻譯成html(整個被當成一個語言`r, x`,highlight 無法作用),下面也不行。 ```r x this is code ```  一些網路上的討論 在rmarkdown中，設定class.source=\u0026quot;bg-danger\u0026quot;的意思是把輸入code 的類別設定為bg-danger。參考下面的設定,一個是給輸入,一個是給輸出\n class\n source output\n```{r class.source=\u0026quot;bg-danger\u0026quot;, class.output=\u0026quot;我在這裡\u0026quot;} mtcars[1:5, \u0026quot;mpg\u0026quot;] ```    執行\n#\u0026gt; [1] 21.0 21.0 22.8 21.4 18.7  執行結果(從md檔案剪出來的) - 當method=custom的時候markup blackfriday,goldmark,pandoc都不出來任何類別,如下:\n``` #\u0026gt; [1] 21.0 21.0 22.8 21.4 18.7 ```  測試區 ```{r class.output=\u0026quot;就是這樣\u0026quot;} 1+1 ```  1+1  #\u0026gt; [1] 2  1+1  #\u0026gt; [1] 2  "
},
{"uri": "/r/%E5%BC%95%E6%93%8E%E6%B8%AC%E8%A9%A61.html","title": "1. 引擎測試1",
	"tags": ["s1"],
	"description": "引擎測試1",
	"content": "步驟  指定新引擎\neng_cppheader = function(options) { # chunk的內容就是code code = paste(options$code, collapse = \u0026quot;\\n\u0026quot;) # 如果使用者沒有指定file參數,停 if (is.null(options$file) || nzchar(options$file) == 0) stop(\u0026quot;file is a required chunk options\u0026quot;) if (is.null(options$path)) options$path = tempdir() # 內容丟到file指定的檔案路徑 cat(code, file = file.path(options$path, options$file)) # 設定環境變數 Sys.setenv(PKG_CPPFLAGS = paste0(\u0026quot;-I\\\u0026quot;\u0026quot;, options$path, \u0026quot;\\\u0026quot;\u0026quot;)) options$engine = 'cpp' # 🏷註解註解 \r # ✔這裡要輸出 knitr::engine_output(options, code, \u0026quot;\u0026quot;) } knitr::knit_engines$set(cppheader=eng_cppheader)    ⛳註解  這裡切換回原本的cpp,讓knitr::engine_output()可以認識,這裡也是。\n 索取所有目前的引擎\nnames(knitr::knit_engines$get())  #\u0026gt; [1] \u0026quot;awk\u0026quot; \u0026quot;bash\u0026quot; \u0026quot;coffee\u0026quot; \u0026quot;gawk\u0026quot; \u0026quot;groovy\u0026quot; \u0026quot;haskell\u0026quot; #\u0026gt; [7] \u0026quot;lein\u0026quot; \u0026quot;mysql\u0026quot; \u0026quot;node\u0026quot; \u0026quot;octave\u0026quot; \u0026quot;perl\u0026quot; \u0026quot;psql\u0026quot; #\u0026gt; [13] \u0026quot;Rscript\u0026quot; \u0026quot;ruby\u0026quot; \u0026quot;sas\u0026quot; \u0026quot;scala\u0026quot; \u0026quot;sed\u0026quot; \u0026quot;sh\u0026quot; #\u0026gt; [19] \u0026quot;stata\u0026quot; \u0026quot;zsh\u0026quot; \u0026quot;highlight\u0026quot; \u0026quot;Rcpp\u0026quot; \u0026quot;tikz\u0026quot; \u0026quot;dot\u0026quot; #\u0026gt; [25] \u0026quot;c\u0026quot; \u0026quot;cc\u0026quot; \u0026quot;fortran\u0026quot; \u0026quot;fortran95\u0026quot; \u0026quot;asy\u0026quot; \u0026quot;cat\u0026quot; #\u0026gt; [31] \u0026quot;asis\u0026quot; \u0026quot;stan\u0026quot; \u0026quot;block\u0026quot; \u0026quot;block2\u0026quot; \u0026quot;js\u0026quot; \u0026quot;css\u0026quot; #\u0026gt; [37] \u0026quot;sql\u0026quot; \u0026quot;go\u0026quot; \u0026quot;python\u0026quot; \u0026quot;julia\u0026quot; \u0026quot;sass\u0026quot; \u0026quot;scss\u0026quot; #\u0026gt; [43] \u0026quot;R\u0026quot; \u0026quot;bslib\u0026quot; \u0026quot;cppheader\u0026quot;  測試新引擎:傳參數進去這個cppheader 也就是cppheader(options)\n💡 options和opts_chk有甚麼關係,可以參考總之就是,opts_chk()是程式碼改變options例如\u0026quot;{r,echo=F}\u0026quot;對等`knitr::opts_chunk.set(echo=F) 程式碼參考\nknitr::knit_engines$get()$cppheader( list(code=\u0026quot;Hello world!\u0026quot;, echo=T, prompt=T, highlight=T, file = \u0026quot;test.h\u0026quot;))  #\u0026gt; [1] \u0026quot;\\n\\n```cpp\\n\u0026gt; Hello world!\\n```\\n\\n\u0026quot;  \r\r 產生新檔案\nsystem2('cat', file.path(tempdir(), \u0026quot;test.h\u0026quot;), stdout = TRUE)  #\u0026gt; [1] \u0026quot;Hello world!\u0026quot;   刪除\nunlink(file.path(tempdir(), \u0026quot;test.h\u0026quot;))  新引擎用在這裡,把這個chunk的內容,放到檔案test.h\n#ifndef __test_h__ #define __test_h__ #define test_string \u0026quot;Hello world!\u0026quot; #include \u0026lt;string\u0026gt; using std::string; #endif // __test_h__  header_file = file.path(tempdir(), \u0026quot;test.h\u0026quot;) ifelse(file.exists(header_file), \u0026quot;I found it!\u0026quot;, \u0026quot;I did not find it!\u0026quot;)  #\u0026gt; [1] \u0026quot;I found it!\u0026quot;  Sys.getenv(\u0026quot;PKG_CPPFLAGS\u0026quot;)  #\u0026gt; [1] \u0026quot;-I\\\u0026quot;C:\\\\Users\\\\linchao\\\\AppData\\\\Local\\\\Temp\\\\RtmpWmT70K\\\u0026quot;\u0026quot;  #include \u0026quot;test.h\u0026quot; // [[Rcpp::export]] string test_it() { return test_string; }  print(try(test_it()))  #\u0026gt; [1] \u0026quot;Hello world!\u0026quot; "
},
{"uri": "/r/%E5%BC%95%E6%93%8E%E6%B8%AC%E8%A9%A62.html","title": "2. 引擎測試2",
	"tags": ["s2"],
	"description": "引擎測試",
	"content": "gg 指定新引擎\n索取所有目前的引擎\nnames(knitr::knit_engines$get())  disp \u0026quot;hello world\u0026quot;  #\u0026gt; #\u0026gt; #\u0026gt; . disp \u0026quot;hello world\u0026quot; #\u0026gt; hello world #\u0026gt; #\u0026gt; . #\u0026gt; end of do-file "
},
{"uri": "/r/%E5%BC%95%E6%93%8E%E6%B8%AC%E8%A9%A63.html","title": "3. 引擎測試3",
	"tags": ["s3"],
	"description": "引擎測試",
	"content": " 💡knitr:engine knitr:output 隱藏某些chunk🤦‍♂️ 輔助用官方 輔助用找函數內容  指定新引擎\none_string \u0026lt;- function(x, ...) paste(x, ..., collapse = '\\n') stataoutputhook \u0026lt;- function(x, options) { message(paste(\u0026quot;\\n\u0026quot;, options$engine, \u0026quot;output from chunk\u0026quot;, options$label)) if (options$engine==\u0026quot;stata2\u0026quot;) { y \u0026lt;- strsplit(x, \u0026quot;\\n\u0026quot;)[[1]] # # Remove \u0026quot;running profile.do\u0026quot; # running \u0026lt;- grep(\u0026quot;^\\\\.?[[:space:]]?running[[:space:]].*profile.do\u0026quot;, y) # if (length(running)\u0026gt;0) {y[running] \u0026lt;- sub(\u0026quot;^\\\\.?[[:space:]]?running[[:space:]].*profile.do\u0026quot;,\u0026quot;\u0026quot;, y[running])} # Remove command echo in Stata log # mynote:下面去掉命列列如果選項cleanlog==true if (length(options$cleanlog)==0 | options$cleanlog!=FALSE) { commandlines \u0026lt;- grep(\u0026quot;^[[:space:]]?\\\\.[[:space:]]\u0026quot;, y) # commandlines \u0026lt;- grep(\u0026quot;^\\\\.[[:space:]]\u0026quot;, y) # 原來的 # mynote: stata 迴圈 的前置文字 if (length(commandlines)\u0026gt;0) { # loopcommands \u0026lt;- grep(\u0026quot;^[[:space:]][[:space:]][[:digit:]+]\\\\.+[[:space:]]+[[:alnum:]]\u0026quot;, y) loopcommands \u0026lt;- grep(\u0026quot;^[[:space:]]+[[:digit:]]+\\\\.[[:space:]]+[^|]\u0026quot;, y) commandlines \u0026lt;- c(commandlines, loopcommands) } continuations \u0026lt;- grep(\u0026quot;^\u0026gt;[[:space:]]\u0026quot;, y) # print(y[continuations]) if (length(commandlines)\u0026gt;0 \u0026amp;\u0026amp; length(continuations)\u0026gt;0) { for (i in 1:length(continuations)) { if ((continuations[i]-1) %in% commandlines) { commandlines \u0026lt;- c(commandlines, continuations[i]) } } } if (length(commandlines)\u0026gt;0) {y \u0026lt;- y[-(commandlines)]} # Some commands have a leading space? # 應該是不用了 if (length(grep(\u0026quot;^[[:space:]*]\\\\.\u0026quot;, y))\u0026gt;0) { y \u0026lt;- y[-(grep(\u0026quot;^[[:space:]*]\\\\.\u0026quot;, y))] } } # Ensure a trailing blank line if (length(y)\u0026gt;0 \u0026amp;\u0026amp; y[length(y)] != \u0026quot;\u0026quot;) { y \u0026lt;- c(y, \u0026quot;\u0026quot;) } # Remove blank lines at the top of the Stata log firsttext \u0026lt;- min(grep(\u0026quot;[[:alnum:]]\u0026quot;, y)) if (firsttext != Inf \u0026amp;\u0026amp; firsttext != 1) {y \u0026lt;- y[-(1:(firsttext-1))]} } else { y \u0026lt;- x } # Now treat the result as regular output one_string(c(\u0026quot;\u0026lt;pre class='code-out'\u0026gt;\u0026lt;code\u0026gt;\u0026quot;,y,\u0026quot;\u0026lt;/code\u0026gt;\u0026lt;/pre\u0026gt;\u0026quot;)) # hook_orig(y, options) } stata_engine \u0026lt;- function (options) { code \u0026lt;- { if (is.null(options$savedo) || options$savedo==FALSE) { f \u0026lt;- basename(tempfile(pattern=\u0026quot;stata\u0026quot;, tmpdir=\u0026quot;.\u0026quot;, fileext=\u0026quot;.do\u0026quot;)) on.exit(unlink(f), add = TRUE) } else { f \u0026lt;- basename(paste0(options$label, \u0026quot;.do\u0026quot;)) } # print(options$code) # print(options$eval) if (is.numeric(options$eval)) { if (all(options$eval \u0026lt; 0)) { pre \u0026lt;- rep(\u0026quot;\u0026quot;, length(options$code)) pre[abs(options$eval)] \u0026lt;- \u0026quot;* \u0026quot; } else if (all(options$eval \u0026gt; 0)) { pre \u0026lt;- rep(\u0026quot;* \u0026quot;, length(options$code)) pre[abs(options$eval)] \u0026lt;- \u0026quot;\u0026quot; } else { message(\u0026quot;eval option must be all negative or positive\u0026quot;) pre \u0026lt;- rep(\u0026quot;\u0026quot;, length(options$code)) } options$code \u0026lt;- paste0(pre, options$code) } writeLines(options$code, f, useBytes=T) logf = sub(\u0026quot;[.]do$\u0026quot;, \u0026quot;.log\u0026quot;, f) if (is.null(options$savedo) || options$savedo==FALSE) on.exit(unlink(logf), add = TRUE) paste(switch(Sys.info()[[\u0026quot;sysname\u0026quot;]], Windows = \u0026quot;/q /e do\u0026quot;, Darwin = \u0026quot;-q -e do\u0026quot;, Linux = \u0026quot;-q -b do\u0026quot;, \u0026quot;-q -b do\u0026quot;), shQuote(normalizePath(f))) } if (is.list(options$engine.opts)) { code = paste(options$engine.opts[[options$engine]], code, options$doargs) } else { # backwards compatability code = paste(options$engine.opts, code, options$doargs) } # print(code) cmd = options$engine.path if (is.list(options$engine.path)) { cmd = options$engine.path[[options$engine]] } else { # backwards compatability cmd = options$engine.path } out = if (!all(options$eval==FALSE)) { message(\u0026quot;running: \u0026quot;, cmd, \u0026quot; \u0026quot;, code) tryCatch(system2(cmd, code, stdout = TRUE, stderr = TRUE, env = options$engine.env), error = function(e) { if (!options$error) stop(e) paste(\u0026quot;Error in running command\u0026quot;, cmd) }) } else \u0026quot;\u0026quot; if (!options$error \u0026amp;\u0026amp; !is.null(attr(out, \u0026quot;status\u0026quot;))) stop(paste(out, collapse = \u0026quot;\\n\u0026quot;)) if (!all(options$eval==FALSE) \u0026amp;\u0026amp; options$engine == \u0026quot;stata2\u0026quot; \u0026amp;\u0026amp; file.exists(logf)) out = c(readLines(logf, encoding=\u0026quot;UTF-8\u0026quot;), out) # stataengine_output(options, options$code, out) knitr::engine_output(options, options$code, out) } # 步驟1設定引擎 knitr::knit_engines$set(stata2=stata_engine) # 這裡用到opts_chink其實就是設定{}裡的選項,例如{r engine.path=\u0026quot;路徑\u0026quot;} #注意這裡是stata2 stataexe \u0026lt;- \u0026quot;C:/Program Files/Stata16/StataMP-64.exe\u0026quot; knitr::opts_chunk$set(engine.path=list(stata2=stataexe)) knitr::opts_chunk$set(error=TRUE, cleanlog=FALSE, comment=NA) # stata_collectcode() assign(\u0026quot;hook_orig\u0026quot;, knitr::knit_hooks$get(\u0026quot;output\u0026quot;)) # , pos=2 knitr::knit_hooks$set(output = stataoutputhook) # packageStartupMessage(\u0026quot;The 'stata' engine is ready to use.\u0026quot;)  索取所有目前的引擎\nnames(knitr::knit_engines$get())  //註解 disp \u0026quot;hello world\u0026quot;   . //註解 . disp \"hello world\" hello world . end of do-file "
},
{"uri": "/r/%E5%BC%95%E6%93%8E%E6%B8%AC%E8%A9%A64.html","title": "4. 引擎測試4",
	"tags": ["s4"],
	"description": "引擎測試",
	"content": "背景  knitr:output  knitr上的\nengine_output = function(options, code, out, extra = NULL) { if (missing(code) \u0026amp;\u0026amp; is.list(out)) return(unlist(sew(out, options))) if (!is.logical(options$echo)) code = code[options$echo] if (length(code) != 1L) code = one_string(code) if (options$engine == 'sas' \u0026amp;\u0026amp; length(out) \u0026gt; 1L \u0026amp;\u0026amp; !grepl('[[:alnum:]]', out[2])) out = tail(out, -3L) if (length(out) != 1L) out = one_string(out) out = sub('([^\\n]+)$', '\\\\1\\n', out) # replace the engine names for markup later, e.g. ```Rscript should be ```r options$engine = switch( options$engine, mysql = 'sql', node = 'javascript', psql = 'sql', Rscript = 'r', options$engine ) if (options$engine == 'stata') { out = gsub('\\n+running.*profile.do', '', out) out = sub('...\\n+', '', out) out = sub('\\n. \\nend of do-file\\n', '', out) } one_string(c( if (length(options$echo) \u0026gt; 1L || options$echo) knit_hooks$get('source')(code, options), if (options$results != 'hide' \u0026amp;\u0026amp; !is_blank(out)) { if (options$engine == 'highlight') out else sew.character(out, options) }, extra )) }  使用範例 但是不知道怎樣測試\nengine_output1(opts_chunk$merge(list(engine = 'python')), out = list(structure(list(src = '1 + 1'), class = 'source'), '2'))  這是options的輸出\n$eval [1] TRUE $echo [1] TRUE $results [1] \u0026quot;markup\u0026quot; $tidy [1] FALSE $tidy.opts NULL $collapse [1] FALSE $prompt [1] FALSE $comment [1] NA $highlight [1] TRUE $strip.white [1] TRUE $size [1] \u0026quot;normalsize\u0026quot; $background [1] \u0026quot;#F7F7F7\u0026quot; $cache [1] 0 $cache.path [1] \u0026quot;引擎測試4_cache/html/\u0026quot; $cache.vars NULL $cache.lazy [1] TRUE $dependson NULL $autodep [1] FALSE $cache.rebuild [1] FALSE $fig.keep [1] \u0026quot;high\u0026quot; $fig.show [1] \u0026quot;hold\u0026quot; $fig.align [1] \u0026quot;center\u0026quot; $fig.path [1] \u0026quot;引擎測試4_files/figure-html/\u0026quot; $dev [1] \u0026quot;png\u0026quot; $dev.args NULL $dpi [1] 192 $fig.ext NULL $fig.width [1] 7 $fig.height [1] 4.326 $fig.env [1] \u0026quot;figure\u0026quot; $fig.cap NULL $fig.scap NULL $fig.lp [1] \u0026quot;fig:\u0026quot; $fig.subcap NULL $fig.pos [1] \u0026quot;\u0026quot; $out.width [1] \u0026quot;70%\u0026quot; $out.height NULL $out.extra NULL $fig.retina [1] 2 $external [1] TRUE $sanitize [1] FALSE $interval [1] 1 $aniopts [1] \u0026quot;controls,loop\u0026quot; $warning [1] TRUE $error [1] TRUE $message [1] TRUE $render NULL $ref.label NULL $child NULL $engine [1] \u0026quot;stata\u0026quot; $split [1] FALSE $include [1] TRUE $purl [1] TRUE $class.output [1] \u0026quot;code-out\u0026quot; $fig.asp [1] 0.618 $engine.path $engine.path$stata2 [1] \u0026quot;C:/Program Files/Stata16/StataMP-64.exe\u0026quot; $cleanlog [1] TRUE $label [1] \u0026quot;unnamed-chunk-3\u0026quot; $code [1] \u0026quot;//註解\u0026quot; \u0026quot;disp \\\u0026quot;hello world\\\u0026quot;\u0026quot; $out.width.px [1] \u0026quot;70%\u0026quot; $out.height.px [1] 415.296 $params.src [1] \u0026quot;engine=\\\u0026quot;stata2\\\u0026quot;\u0026quot; attr(,\u0026quot;class\u0026quot;) [1] \u0026quot;knitr_strict_list\u0026quot;  指定新引擎 one_string \u0026lt;- function(x, ...) paste(x, ..., collapse = '\\n') # 這是STATA引擎的輸出 stataoutputhook \u0026lt;- function(x, options) { message(paste(\u0026quot;\\n\u0026quot;, options$engine, \u0026quot;output from chunk\u0026quot;, options$label)) if (options$engine==\u0026quot;stata2\u0026quot;) { y \u0026lt;- strsplit(x, \u0026quot;\\n\u0026quot;)[[1]] # # Remove \u0026quot;running profile.do\u0026quot; # running \u0026lt;- grep(\u0026quot;^\\\\.?[[:space:]]?running[[:space:]].*profile.do\u0026quot;, y) # if (length(running)\u0026gt;0) {y[running] \u0026lt;- sub(\u0026quot;^\\\\.?[[:space:]]?running[[:space:]].*profile.do\u0026quot;,\u0026quot;\u0026quot;, y[running])} # Remove command echo in Stata log # mynote:下面去掉命列列如果選項cleanlog==true if (length(options$cleanlog)==0 | options$cleanlog!=FALSE) { commandlines \u0026lt;- grep(\u0026quot;^[[:space:]]?\\\\.[[:space:]]\u0026quot;, y) # commandlines \u0026lt;- grep(\u0026quot;^\\\\.[[:space:]]\u0026quot;, y) # 原來的 # mynote: stata 迴圈 的前置文字 if (length(commandlines)\u0026gt;0) { # loopcommands \u0026lt;- grep(\u0026quot;^[[:space:]][[:space:]][[:digit:]+]\\\\.+[[:space:]]+[[:alnum:]]\u0026quot;, y) loopcommands \u0026lt;- grep(\u0026quot;^[[:space:]]+[[:digit:]]+\\\\.[[:space:]]+[^|]\u0026quot;, y) commandlines \u0026lt;- c(commandlines, loopcommands) } continuations \u0026lt;- grep(\u0026quot;^\u0026gt;[[:space:]]\u0026quot;, y) # print(y[continuations]) if (length(commandlines)\u0026gt;0 \u0026amp;\u0026amp; length(continuations)\u0026gt;0) { for (i in 1:length(continuations)) { if ((continuations[i]-1) %in% commandlines) { commandlines \u0026lt;- c(commandlines, continuations[i]) } } } if (length(commandlines)\u0026gt;0) {y \u0026lt;- y[-(commandlines)]} # Some commands have a leading space? # 應該是不用了 if (length(grep(\u0026quot;^[[:space:]*]\\\\.\u0026quot;, y))\u0026gt;0) { y \u0026lt;- y[-(grep(\u0026quot;^[[:space:]*]\\\\.\u0026quot;, y))] } } # Ensure a trailing blank line if (length(y)\u0026gt;0 \u0026amp;\u0026amp; y[length(y)] != \u0026quot;\u0026quot;) { y \u0026lt;- c(y, \u0026quot;\u0026quot;) } # Remove blank lines at the top of the Stata log firsttext \u0026lt;- min(grep(\u0026quot;[[:alnum:]]\u0026quot;, y)) if (firsttext != Inf \u0026amp;\u0026amp; firsttext != 1) {y \u0026lt;- y[-(1:(firsttext-1))]} } else { y \u0026lt;- x } # Now treat the result as regular output # 這是我的測試輸出 paste0(c(\u0026quot;\u0026lt;pre class='code-out'\u0026gt;\u0026lt;code\u0026gt;\u0026quot;,y,\u0026quot;\u0026lt;/code\u0026gt;\u0026lt;/pre\u0026gt;\u0026quot;)) #不調用原先的 #hook_orig(y, options) # 🏷註解參考 \r } stata_engine \u0026lt;- function (options) { code \u0026lt;- { if (is.null(options$savedo) || options$savedo==FALSE) { f \u0026lt;- basename(tempfile(pattern=\u0026quot;stata\u0026quot;, tmpdir=\u0026quot;.\u0026quot;, fileext=\u0026quot;.do\u0026quot;)) on.exit(unlink(f), add = TRUE) } else { f \u0026lt;- basename(paste0(options$label, \u0026quot;.do\u0026quot;)) } # print(options$code) # print(options$eval) if (is.numeric(options$eval)) { if (all(options$eval \u0026lt; 0)) { pre \u0026lt;- rep(\u0026quot;\u0026quot;, length(options$code)) pre[abs(options$eval)] \u0026lt;- \u0026quot;* \u0026quot; } else if (all(options$eval \u0026gt; 0)) { pre \u0026lt;- rep(\u0026quot;* \u0026quot;, length(options$code)) pre[abs(options$eval)] \u0026lt;- \u0026quot;\u0026quot; } else { message(\u0026quot;eval option must be all negative or positive\u0026quot;) pre \u0026lt;- rep(\u0026quot;\u0026quot;, length(options$code)) } options$code \u0026lt;- paste0(pre, options$code) } writeLines(options$code, f, useBytes=T) logf = sub(\u0026quot;[.]do$\u0026quot;, \u0026quot;.log\u0026quot;, f) if (is.null(options$savedo) || options$savedo==FALSE) on.exit(unlink(logf), add = TRUE) paste(switch(Sys.info()[[\u0026quot;sysname\u0026quot;]], Windows = \u0026quot;/q /e do\u0026quot;, Darwin = \u0026quot;-q -e do\u0026quot;, Linux = \u0026quot;-q -b do\u0026quot;, \u0026quot;-q -b do\u0026quot;), shQuote(normalizePath(f))) } if (is.list(options$engine.opts)) { code = paste(options$engine.opts[[options$engine]], code, options$doargs) } else { # backwards compatability code = paste(options$engine.opts, code, options$doargs) } # print(code) cmd = options$engine.path if (is.list(options$engine.path)) { cmd = options$engine.path[[options$engine]] } else { # backwards compatability cmd = options$engine.path } out = if (!all(options$eval==FALSE)) { message(\u0026quot;running: \u0026quot;, cmd, \u0026quot; \u0026quot;, code) tryCatch(system2(cmd, code, stdout = TRUE, stderr = TRUE, env = options$engine.env), error = function(e) { if (!options$error) stop(e) paste(\u0026quot;Error in running command\u0026quot;, cmd) }) } else \u0026quot;\u0026quot; if (!options$error \u0026amp;\u0026amp; !is.null(attr(out, \u0026quot;status\u0026quot;))) stop(paste(out, collapse = \u0026quot;\\n\u0026quot;)) if (!all(options$eval==FALSE) \u0026amp;\u0026amp; options$engine == \u0026quot;stata2\u0026quot; \u0026amp;\u0026amp; file.exists(logf)) out = c(readLines(logf, encoding=\u0026quot;UTF-8\u0026quot;), out) # ⛳註解 把引擎改為stata否則engine_output不認識stata2 ,也可以options$engine = 'stata' options[[\u0026quot;engine\u0026quot;]]=\u0026quot;stata\u0026quot; knitr::engine_output(options, options$code, out) } # 步驟1設定引擎 knitr::knit_engines$set(stata2=stata_engine) # 這裡用到opts_chink其實就是設定{}裡的選項,例如{r engine.path=\u0026quot;路徑\u0026quot;} #注意這裡是stata2 stataexe \u0026lt;- \u0026quot;C:/Program Files/Stata16/StataMP-64.exe\u0026quot; knitr::opts_chunk$set(engine.path=list(stata2=stataexe)) knitr::opts_chunk$set(error=TRUE, cleanlog=T, comment=NA) # stata_collectcode() 測試不用這個 # 原先的輸出hook(不是engine_output) assign(\u0026quot;hook_orig\u0026quot;, knitr::knit_hooks$get(\u0026quot;output\u0026quot;)) # , pos=2 knitr::knit_hooks$set(output = stataoutputhook) # packageStartupMessage(\u0026quot;The 'stata' engine is ready to use.\u0026quot;)  索取所有目前的引擎\nnames(knitr::knit_engines$get())  ⛳這裡是原先的hook_origin  # print(\u0026quot;xxx\u0026quot;) # print(body(hook_orig)) hook_origin\u0026lt;- function{ hook.t(x, options, options[[paste0(\u0026quot;attr.\u0026quot;, class)]], options[[paste0(\u0026quot;class.\u0026quot;, class)]]) }  //註解 disp \u0026quot;hello world\u0026quot;   . /. disp \"hello world\" hello world "
},
{"uri": "/r/blackfriday.html","title": "blackfriday",
	"tags": [],
	"description": "blackfriday",
	"content": "測試 列表測試 只有blackfriday 可以縮排\n test\n. disp \u0026quot;hello world\u0026quot; hello world \u0026lt;div\u0026gt;in div\u0026lt;/div\u0026gt; . end of do-file  test\n  放在div中會怎樣 要測試的項目\n\u0026lt;div\u0026gt; ```stata . disp \u0026quot;hello world\u0026quot; hello world \u0026lt;div\u0026gt;in div\u0026lt;/div\u0026gt; . end of do-file ``` \u0026lt;/div\u0026gt; ```   ```stata . disp \"hello world\" hello world in div . end of do-file ```  ❌goldmark,blackfriday 會把整個區塊完全忽略，顯示如下\n\u0026lt;div\u0026gt; ```stata . disp \u0026quot;hello world\u0026quot; hello world \u0026lt;div\u0026gt;in div\u0026lt;/div\u0026gt; . end of do-file ``` \u0026lt;/div\u0026gt;  加入類別 只有pandoc可以。\ngoldmark \u0026lt;pre\u0026gt;\u0026lt;code class=\u0026quot;language-{.xxx} hljs stata\u0026quot; data-lang=\u0026quot;{.xxx}\u0026quot;\u0026gt;. \u0026lt;span class=\u0026quot;hljs-keyword\u0026quot;\u0026gt;disp\u0026lt;/span\u0026gt; \u0026lt;span class=\u0026quot;hljs-string\u0026quot;\u0026gt;\u0026quot;hello world\u0026quot;\u0026lt;/span\u0026gt; hello world . end of \u0026lt;span class=\u0026quot;hljs-keyword\u0026quot;\u0026gt;do\u0026lt;/span\u0026gt;-\u0026lt;span class=\u0026quot;hljs-keyword\u0026quot;\u0026gt;file\u0026lt;/span\u0026gt; \u0026lt;/code\u0026gt;\u0026lt;/pre\u0026gt;  blackfriday \u0026lt;pre\u0026gt;\u0026lt;code class=\u0026quot;language-.xxx hljs stata\u0026quot; data-lang=\u0026quot;.xxx\u0026quot;\u0026gt;. \u0026lt;span class=\u0026quot;hljs-keyword\u0026quot;\u0026gt;disp\u0026lt;/span\u0026gt; \u0026lt;span class=\u0026quot;hljs-string\u0026quot;\u0026gt;\u0026quot;hello world\u0026quot;\u0026lt;/span\u0026gt; hello world . end of \u0026lt;span class=\u0026quot;hljs-keyword\u0026quot;\u0026gt;do\u0026lt;/span\u0026gt;-\u0026lt;span class=\u0026quot;hljs-keyword\u0026quot;\u0026gt;file\u0026lt;/span\u0026gt;\u0026lt;/code\u0026gt;\u0026lt;/pre\u0026gt;  pandoc \u0026lt;pre class=\u0026quot;xxx\u0026quot;\u0026gt;\u0026lt;code class=\u0026quot;hljs stata\u0026quot;\u0026gt;. \u0026lt;span class=\u0026quot;hljs-keyword\u0026quot;\u0026gt;disp\u0026lt;/span\u0026gt; \u0026lt;span class=\u0026quot;hljs-string\u0026quot;\u0026gt;\u0026quot;hello world\u0026quot;\u0026lt;/span\u0026gt; hello world . end of \u0026lt;span class=\u0026quot;hljs-keyword\u0026quot;\u0026gt;do\u0026lt;/span\u0026gt;-\u0026lt;span class=\u0026quot;hljs-keyword\u0026quot;\u0026gt;file\u0026lt;/span\u0026gt;\u0026lt;/code\u0026gt;\u0026lt;/pre\u0026gt; "
},
{"uri": "/r/%E4%BA%82%E6%95%B8.html","title": "亂數",
	"tags": [],
	"description": "亂數",
	"content": "亂數\nx \u0026lt;- qnorm(runif(10)) # but we can just use rnorm() in practice x \u0026lt;- rnorm(10) x "
},
{"uri": "/r/%E6%B8%AC%E8%A9%A6%E9%A1%9E%E5%88%A5.html","title": "測試類別",
	"tags": [],
	"description": "測試類別",
	"content": "x=\u0026quot;怎麼出來\u0026quot;  1+1 #\u0026gt; [1] 2  dfsfasfd "
}
,
{"uri": "/basic/%E4%BD%BF%E7%94%A8%E6%99%82%E7%99%BC%E7%94%9F%E7%9A%84%E5%95%8F%E9%A1%8C/cssstyle2.html","title": "樣式 in Rmarkdown",
	"tags": ["css"],
	"description": "問題和紀錄",
	"content": " 在democontainer.css中  只有在副檔名RMD檔案中有作用,在MD,Rmarkdown副檔名中無用。 區塊前面要空一行才正常。 指果指定pandoc 那就三個都可以   base ::: ::: quiz quiz ::: ::: sidebar sidebar :::  ebar :::\n"
},
{"uri": "/basic/%E4%BD%BF%E7%94%A8%E6%99%82%E7%99%BC%E7%94%9F%E7%9A%84%E5%95%8F%E9%A1%8C/cssstyle.html","title": "樣式 in Rmd",
	"tags": ["css"],
	"description": "問題和紀錄",
	"content": " 在democontainer.css中  只有在副檔名RMD檔案中有作用,在MD,Rmarkdown副檔名中無用。 區塊前面要空一行才正常。   base ::: ::: quiz quiz ::: ::: sidebar sidebar :::  ebar :::\n"
}]